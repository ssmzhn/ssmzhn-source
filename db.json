{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"source/images/avatar.png","path":"images/avatar.png","modified":1,"renderable":0},{"_id":"themes/yun/source/Yun.png","path":"Yun.png","modified":1,"renderable":1},{"_id":"themes/yun/source/yun.ico","path":"yun.ico","modified":1,"renderable":1},{"_id":"themes/yun/source/yun.svg","path":"yun.svg","modified":1,"renderable":1},{"_id":"themes/yun/source/css/hexo-theme-yun.styl","path":"css/hexo-theme-yun.styl","modified":1,"renderable":1},{"_id":"themes/yun/source/js/gallery-decrypt.js","path":"js/gallery-decrypt.js","modified":1,"renderable":1},{"_id":"themes/yun/source/js/hexo-theme-yun.js","path":"js/hexo-theme-yun.js","modified":1,"renderable":1},{"_id":"themes/yun/source/js/pjax.js","path":"js/pjax.js","modified":1,"renderable":1},{"_id":"themes/yun/source/js/say.js","path":"js/say.js","modified":1,"renderable":1},{"_id":"themes/yun/source/js/sidebar.js","path":"js/sidebar.js","modified":1,"renderable":1},{"_id":"themes/yun/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/yun/source/js/analytics/leancloud-visitors.js","path":"js/analytics/leancloud-visitors.js","modified":1,"renderable":1},{"_id":"themes/yun/source/js/comments/disqus.js","path":"js/comments/disqus.js","modified":1,"renderable":1},{"_id":"themes/yun/source/js/search/algolia-search.js","path":"js/search/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/yun/source/js/search/local-search.js","path":"js/search/local-search.js","modified":1,"renderable":1},{"_id":"themes/yun/source/js/ui/banner.js","path":"js/ui/banner.js","modified":1,"renderable":1},{"_id":"themes/yun/source/js/ui/fireworks.js","path":"js/ui/fireworks.js","modified":1,"renderable":1},{"_id":"themes/yun/source/js/ui/mode.js","path":"js/ui/mode.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/_data/yun.yml","hash":"f2d9b8251ac82f9ababb0946bceefc6c40744bac","modified":1629162943821},{"_id":"source/_posts/Python学习随笔.md","hash":"5c430163703ce32fecad8978ef6f98ec37113a60","modified":1629208803949},{"_id":"source/_posts/blog.md","hash":"2f32042c2dfa391b45e2afdbf7bc0bf2321d56a1","modified":1629118844128},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1629030927832},{"_id":"source/about/index.md","hash":"6d58eebb21bfeded32e425e57758df164b323a0d","modified":1629074837560},{"_id":"source/categories/index.md","hash":"77abbbef193fb4328ff3c09bc614547ba6f43ffd","modified":1629121581808},{"_id":"source/images/avatar.png","hash":"c5551cc17420bc955b24cc9d04b643a653f43fa8","modified":1629030927832},{"_id":"source/links/index.md","hash":"20145995a9a385afb102034a535cf5f6cd4c9593","modified":1629289625545},{"_id":"source/tags/index.md","hash":"5af7d0d2b5475e744cc7f3720ad5b374113d5266","modified":1629121333758},{"_id":"source/xiaoyuan-blog/index.md","hash":"1c5048a9ee1a15a2221858c9922e30dc914bba07","modified":1629289286315},{"_id":"source/links/index-1.md","hash":"d25211adb6bf8c056e197b3e92b8dfc57d6e10ea","modified":1629069147479},{"_id":"themes/yun/.eslintrc.js","hash":"d56e53c7d41be4617612bbdb04fa588491a41a23","modified":1629019548233},{"_id":"themes/yun/LICENSE","hash":"a24ce67b002ff38718c549129d23d177bf951dbf","modified":1629019548233},{"_id":"themes/yun/.gitignore","hash":"6d84be36c703e1c665b90d531c49841d275dd41f","modified":1629019548233},{"_id":"themes/yun/._config.yml.swp","hash":"fdd2f4a41387e5336533815ed4e15bbc395dbf14","modified":1629171069695},{"_id":"themes/yun/package.json","hash":"73f48851fc5e3e6c89165fff116173eccf63f300","modified":1629019548253},{"_id":"themes/yun/README.md","hash":"c4ba9b88d3928c683d430642cb927247ec5ed937","modified":1629019548233},{"_id":"themes/yun/_config.yml","hash":"2c476c34680c2d6f78bc70627d52414066f0bbd7","modified":1629019548233},{"_id":"themes/yun/tsconfig.json","hash":"0037faa7fde9ad37635cc2956fd68ab3f51b7a02","modified":1629019548283},{"_id":"themes/yun/.github/FUNDING.yml","hash":"41b293d76a307f29e81d931edb1c6d05fed526fd","modified":1629019548233},{"_id":"themes/yun/data/_comments.yml","hash":"6519847d020a3b4ffd7bb8aeb3fad5f209ec8e96","modified":1629019548233},{"_id":"themes/yun/languages/default.yml","hash":"5d50a944a8b527fd857c81b17a60e5cc414c5729","modified":1629019548243},{"_id":"themes/yun/docs/README.md","hash":"41c1466407fe76bd999ca6f0defef38833ad5427","modified":1629019548243},{"_id":"themes/yun/languages/en.yml","hash":"11c482bee3bda200125392c607a0bddc0f74f552","modified":1629019548243},{"_id":"themes/yun/languages/ja.yml","hash":"18ab694a0c64f4c0e53b570495625901e883df24","modified":1629019548243},{"_id":"themes/yun/languages/zh-CN.yml","hash":"ef5675e4e6f4a42251ac1a08c4fd5f46d5e27a1f","modified":1629019548243},{"_id":"themes/yun/layout/404.pug","hash":"39719b1b4300ed7d12b062eec4186bda5dede7c2","modified":1629019548243},{"_id":"themes/yun/_vendors.yml","hash":"f3762948f10fd89d897559af378756df6ffa18bc","modified":1629019548233},{"_id":"themes/yun/layout/links.pug","hash":"d33c91cb82f47f51a5fadcbe14d247c99e081851","modified":1629019548253},{"_id":"themes/yun/layout/gallery.pug","hash":"3cb21b8a2c935df928f862db97f7908e94643e29","modified":1629019548253},{"_id":"themes/yun/layout/archive.pug","hash":"067ac814d892dc6c0efe9c03c45abd712648e37e","modified":1629019548253},{"_id":"themes/yun/layout/girls.pug","hash":"3429a9d6c8efceb563e1893e033d0709a2ac2d6c","modified":1629019548253},{"_id":"themes/yun/layout/index.pug","hash":"7322ea6d9cfb29b1bb13a31bb5f98abcf5d9f409","modified":1629019548253},{"_id":"themes/yun/layout/category.pug","hash":"6d0a910ac2716c1acae5e7ab0c2a56e4d5438281","modified":1629019548253},{"_id":"themes/yun/layout/post.pug","hash":"b3bf75ba00d3e3f292eb1ffc247f95eb98d3b2ff","modified":1629019548253},{"_id":"themes/yun/layout/tag.pug","hash":"6392c8ffd359008e32cc8ce63868a95727855527","modified":1629019548253},{"_id":"themes/yun/layout/page.pug","hash":"aa858cb8b4c7bd80a1dfdc203de0eee566319f9e","modified":1629019548253},{"_id":"themes/yun/source/yun.ico","hash":"5d63418cd650d1881d4b6507f35b9f9df766020e","modified":1629019548283},{"_id":"themes/yun/scripts/events/config.js","hash":"bfc0a6f1fca67397a847b63f6ab90a14091960f2","modified":1629019548253},{"_id":"themes/yun/layout/slide.pug","hash":"da95a3290ef1e0d4e6194d3f07a6401bb3c4d6c3","modified":1629019548253},{"_id":"themes/yun/scripts/events/data.js","hash":"23ce661be037fbfae5d190f7800a971b4e549ffa","modified":1629019548253},{"_id":"themes/yun/scripts/events/index.js","hash":"6eb536cd204f3a3ee2e15842cb90539daccd33d7","modified":1629019548253},{"_id":"themes/yun/scripts/events/utils.js","hash":"05f2d96bf5321cccadc3ab768a3827a337a86233","modified":1629019548253},{"_id":"themes/yun/scripts/filters/index.js","hash":"fcbfa46a8e6b3006a93966941b2bb446cb77a62d","modified":1629019548253},{"_id":"themes/yun/scripts/helpers/encrypt.js","hash":"efc3c8b54288e278e1f74fedab6526881d6ea30f","modified":1629019548253},{"_id":"themes/yun/scripts/helpers/engine.js","hash":"59a1ea9fd5b49398c97e844f04d00c0760b8f707","modified":1629019548253},{"_id":"themes/yun/scripts/helpers/index.js","hash":"c0d4c363423ef189d78efe158220fbccc759cd78","modified":1629019548263},{"_id":"themes/yun/scripts/helpers/yun-config.js","hash":"72e0f9c5833b039f62d4e0c9255009576e405e91","modified":1629019548263},{"_id":"themes/yun/scripts/tags/prompt.js","hash":"36f6916721c61b7b03f655088d931c5ea1658d32","modified":1629019548263},{"_id":"themes/yun/source/yun.svg","hash":"aa027a0a9e7ba96c906b9fd2d9cd3f8018ff2e2d","modified":1629019548283},{"_id":"themes/yun/source/Yun.png","hash":"b8ae426fa5dd7579d23d189c222641d812c51c0a","modified":1629019548263},{"_id":"themes/yun/.github/ISSUE_TEMPLATE/usage_problem.md","hash":"6127e821a2f673c1b1604ccf1e8d9c062389eb0c","modified":1629019548233},{"_id":"themes/yun/.github/workflows/docs.yml","hash":"139126caaa7cd788b715c8d31673f5afc017b4aa","modified":1629019548233},{"_id":"themes/yun/.github/ISSUE_TEMPLATE/feature_request.md","hash":"fb1c93f9e264bc02c38955345666a18d91159e8e","modified":1629019548233},{"_id":"themes/yun/docs/.vuepress/config.ts","hash":"9eb85bd10a49b1f1f48cea0ce1e585148f427b63","modified":1629019548233},{"_id":"themes/yun/.github/ISSUE_TEMPLATE/bug_report.md","hash":"5cd9a8ca417d2c4550d895ebf1a732338eeb5cab","modified":1629019548233},{"_id":"themes/yun/docs/demo/README.md","hash":"bcd2cb9cd4c7bdc074dd1cf8d6a7d05acff8703f","modified":1629019548243},{"_id":"themes/yun/docs/guide/README.md","hash":"b6ee2d6a6b1ba839265f373e4f19867016be64c1","modified":1629019548243},{"_id":"themes/yun/docs/about/README.md","hash":"604e1752f9b250a1b9d41886c0f24aa5305a2548","modified":1629019548243},{"_id":"themes/yun/docs/guide/additional-package-support.md","hash":"8a34edf209dbab311ace198ab08f0e915716490a","modified":1629019548243},{"_id":"themes/yun/docs/guide/faq.md","hash":"0e8434a5b98563c4435cfa907fc13a25ce50bf20","modified":1629019548243},{"_id":"themes/yun/docs/guide/config.md","hash":"c0fb38eb801b1cff7d59cba427df5f1e2a6c0b66","modified":1629019548243},{"_id":"themes/yun/docs/guide/page.md","hash":"ff8b43b8d071df907db01c78d367005a7e764790","modified":1629019548243},{"_id":"themes/yun/docs/guide/third-party-support.md","hash":"8883d39316099a95313e3c2159b40717500dad80","modified":1629019548243},{"_id":"themes/yun/docs/guide/migrate.md","hash":"a865536d769d82500bfc58ab2ace3641880c5ba9","modified":1629019548243},{"_id":"themes/yun/docs/en/README.md","hash":"4b7a325b5f0d97d6bc4af65cf86a576dedf45dde","modified":1629019548243},{"_id":"themes/yun/layout/_partial/background.pug","hash":"53b9607f2c68d852d2c082a6588f66af0e681b68","modified":1629019548253},{"_id":"themes/yun/layout/_partial/banner.pug","hash":"71179faccb4098909679021585d39c1cd807c6ab","modified":1629019548253},{"_id":"themes/yun/layout/_partial/footer.pug","hash":"d75a31959f81b3d4b80c85e946a8f3085cb7a3c8","modified":1629019548253},{"_id":"themes/yun/layout/_partial/head.pug","hash":"ff6c41e56519c84d044a3339f2deb43dc26aa4e1","modified":1629019548253},{"_id":"themes/yun/layout/_partial/pagination.pug","hash":"b55b6a99b105447b4a6c982fa258680a2a9a34a9","modified":1629019548253},{"_id":"themes/yun/layout/_partial/sidebar.pug","hash":"c4ef88a4bce0d7c2ac315c03eb5a64a70ebb644d","modified":1629019548253},{"_id":"themes/yun/layout/_partial/recent-posts.pug","hash":"dd336505cb58a8c7b2793182b36c30766a0f3eae","modified":1629019548253},{"_id":"themes/yun/layout/_partial/layout.pug","hash":"b66694fd4ca8892011c7841169d1745d9e135d69","modified":1629019548253},{"_id":"themes/yun/layout/_mixin/index.pug","hash":"3969072910506b21cb09ea2a69f718110c1bb23c","modified":1629019548243},{"_id":"themes/yun/layout/_mixin/post-categories.pug","hash":"d353f980d65918e8c04f892959b004e4904ce543","modified":1629019548243},{"_id":"themes/yun/layout/_mixin/icon.pug","hash":"18ee2c33b4e6ef71c31d7955f9a20789fe6aa9e4","modified":1629019548243},{"_id":"themes/yun/layout/_mixin/page-header.pug","hash":"7ab9c1a6099eda3a64f355caa4d8fac5deff94c6","modified":1629019548243},{"_id":"themes/yun/layout/_mixin/post-collapse.pug","hash":"741195a5a29ecb5863b1fd0c3b203d960aae05c1","modified":1629019548243},{"_id":"themes/yun/layout/_mixin/post-tags.pug","hash":"b36dc6e1be7eede047f1f355bd4d095078b342d2","modified":1629019548243},{"_id":"themes/yun/layout/_third-party/aplayer.pug","hash":"642445a227e8b702be443958b49901d7c884555f","modified":1629019548253},{"_id":"themes/yun/layout/_third-party/cdn.pug","hash":"0ce00434e64a9fa608a844d362ee3e3745603e62","modified":1629019548253},{"_id":"themes/yun/layout/_third-party/google-tagmanager.pug","hash":"01724665b723aaa1b5fc3a63e3b538970efcd13c","modified":1629019548253},{"_id":"themes/yun/layout/_third-party/index.pug","hash":"c7ca05ff19e71b141ecfbe031a63e225178c2eec","modified":1629019548253},{"_id":"themes/yun/layout/_third-party/lightgallery.pug","hash":"f47e020b9dd2e51c0b78f2718eece58c4448fd15","modified":1629019548253},{"_id":"themes/yun/layout/_third-party/pjax.pug","hash":"b5c0c9cf26933621839ab90a4e754e6406341d09","modified":1629019548253},{"_id":"themes/yun/layout/_widget/aplayer.pug","hash":"45675643a8d5e64117f94612e517ce4dff6ca053","modified":1629019548253},{"_id":"themes/yun/layout/_widget/back-to-top.pug","hash":"c8bffdede2cbe8dcb2e4b903d1a9f4a793aa9650","modified":1629019548253},{"_id":"themes/yun/layout/_widget/mourn.pug","hash":"3c7741cb35d253a73e2a9ad326ed9e638035102c","modified":1629019548253},{"_id":"themes/yun/layout/_widget/cloud.pug","hash":"8903d1311bf5f68dcc23e520cb4f1e4385aff70d","modified":1629019548253},{"_id":"themes/yun/layout/_widget/index.pug","hash":"2888bcec128ce5b72236aa794103089b64240689","modified":1629019548253},{"_id":"themes/yun/layout/_widget/notice.pug","hash":"780a10dbf308022790c58a4d2117dc2f48581531","modified":1629019548253},{"_id":"themes/yun/layout/_widget/say.pug","hash":"fbb919ae36a9b0ce349ed4b305d19d89231c3dd9","modified":1629019548253},{"_id":"themes/yun/source/js/gallery-decrypt.js","hash":"9fdbb18bc6f2df816497288d2d0d7d5171046ab1","modified":1629019548273},{"_id":"themes/yun/source/css/hexo-theme-yun.styl","hash":"c2f395dbd3cebea6522d330525903271029c77cf","modified":1629019548273},{"_id":"themes/yun/source/js/hexo-theme-yun.js","hash":"ea104f1b49f4418c4168d29f8a12086bd91274df","modified":1629019548273},{"_id":"themes/yun/source/js/say.js","hash":"aac781102e8d03c7f07eb161d9d008822cda2bdd","modified":1629019548273},{"_id":"themes/yun/source/js/pjax.js","hash":"4fd54bd75d9eb751770543ad3dcf2ee03c8485c5","modified":1629019548273},{"_id":"themes/yun/source/js/sidebar.js","hash":"0c97518a1d59422ef2af792ec8e550ba8c2d7233","modified":1629019548283},{"_id":"themes/yun/source/js/utils.js","hash":"a0befd581d3d533948ddc969d3772f91aecb8d00","modified":1629019548283},{"_id":"themes/yun/docs/.vuepress/components/DemoSite.vue","hash":"f2f5acddccaa82d46f2813e9efe99ee9681cbc59","modified":1629019548233},{"_id":"themes/yun/docs/.vuepress/components/DemoSites.vue","hash":"c716a22d8cb0a586f740ff958c3feac40e4dd7cb","modified":1629019548233},{"_id":"themes/yun/docs/.vuepress/components/DisplayIcon.vue","hash":"2bc93866e74c458db4ee234ec1d70a9a6c78eade","modified":1629019548233},{"_id":"themes/yun/docs/.vuepress/assets/README.md","hash":"e59e803a95404654fe68308bc24bddc598e72205","modified":1629019548233},{"_id":"themes/yun/docs/.vuepress/assets/icons.json","hash":"8a37ebd5994f07809da9126def554e9e6aab8048","modified":1629019548233},{"_id":"themes/yun/docs/.vuepress/assets/sites.json","hash":"e2ef2942f4a8174781f0955968a5a3c243cfe553","modified":1629019548233},{"_id":"themes/yun/docs/.vuepress/public/logo.gif","hash":"a2e7143f1f890f58a3c06b8c0acd7a7a3225022f","modified":1629019548243},{"_id":"themes/yun/docs/.vuepress/public/manifest.json","hash":"471057e459e6aeb525e2dc09922e4182ab89683c","modified":1629019548243},{"_id":"themes/yun/docs/.vuepress/public/yun.svg","hash":"aa027a0a9e7ba96c906b9fd2d9cd3f8018ff2e2d","modified":1629019548243},{"_id":"themes/yun/docs/.vuepress/types/index.ts","hash":"e303419192367a1c44815e7e490d048972505750","modified":1629019548243},{"_id":"themes/yun/docs/.vuepress/styles/index.scss","hash":"f1a0b0d4356c55c8547aab2c846315f7a1e80ae0","modified":1629019548243},{"_id":"themes/yun/docs/.vuepress/styles/palette.styl","hash":"25a57ac820b471bc91c151347a1c1d0cc62767d6","modified":1629019548243},{"_id":"themes/yun/docs/.vuepress/scripts/generate-demo.js","hash":"72206a6f75188cbaeb9d1b5c92a62ffd802f64b3","modified":1629019548243},{"_id":"themes/yun/docs/.vuepress/scripts/index.js","hash":"b45522615eb00a7ccc7d18501ec49d50d5878177","modified":1629019548243},{"_id":"themes/yun/docs/.vuepress/scripts/markdown.js","hash":"8b1c6ba74a7880459476ad68841d9044c2e37567","modified":1629019548243},{"_id":"themes/yun/docs/.vuepress/public/CNAME","hash":"c7ffe7d5488a88dfa38ef3780292c22088d5e8ce","modified":1629019548233},{"_id":"themes/yun/docs/en/demo/README.md","hash":"113a62c59cf568e3770d281e7113024e38c713ec","modified":1629019548243},{"_id":"themes/yun/docs/en/about/README.md","hash":"19f69d579ba7770c732306c6c66642f4d170220d","modified":1629019548243},{"_id":"themes/yun/docs/en/guide/additional-package-support.md","hash":"d4fb8a9d60d27c6526edb58dcdaf1fc64f5183e7","modified":1629019548243},{"_id":"themes/yun/docs/about/icon.md","hash":"e65f78160caf6542db9fdadd0734413b8ada7004","modified":1629019548243},{"_id":"themes/yun/docs/en/guide/faq.md","hash":"60e785699c299b26eef20ae1d3979e17702b9268","modified":1629019548243},{"_id":"themes/yun/docs/en/guide/page.md","hash":"c2e204c5e6986f4986c768bef9b0c6bbb754f75c","modified":1629019548243},{"_id":"themes/yun/docs/en/guide/third-party-support.md","hash":"d66fd081cbb944a572e9de8f15256f8f1192b2d7","modified":1629019548243},{"_id":"themes/yun/docs/en/guide/README.md","hash":"bad341a2ecc6c85822ac386d5349baa605e4b0a0","modified":1629019548243},{"_id":"themes/yun/layout/_partial/post/post-edit.pug","hash":"09d21451a8464047777dcbda09c14b1140396dd8","modified":1629019548253},{"_id":"themes/yun/layout/_partial/post/post-copyright.pug","hash":"a2415fb36a0dffbe57bf32cd2cfeace11cbaed6b","modified":1629019548253},{"_id":"themes/yun/layout/_partial/post/post-meta.pug","hash":"9aebdcdea704842b010a0e34073c6bb864cf9515","modified":1629019548253},{"_id":"themes/yun/layout/_partial/post/post-nav.pug","hash":"a951544cfa6127f3284e221cdf6c3e2dcb9801c9","modified":1629019548253},{"_id":"themes/yun/layout/_partial/post/post-schema.pug","hash":"ec85079174da20c9f608b142e7fda2c28a9b1dac","modified":1629019548253},{"_id":"themes/yun/layout/_partial/post/reward.pug","hash":"f19b6562f1df71c23dafed15f2f3c9415414e281","modified":1629019548253},{"_id":"themes/yun/layout/_partial/sidebar/info.pug","hash":"a4db9946c319629ecc1983375afdcf243cfc7847","modified":1629019548253},{"_id":"themes/yun/layout/_third-party/adsense/google-adsense.pug","hash":"ae63305d776ebec0d88f91197b5c78cdaa401585","modified":1629019548253},{"_id":"themes/yun/layout/_third-party/analytics/busuanzi.pug","hash":"d606071c4c4f1e0df9f55fa6c8e248eb2591c484","modified":1629019548253},{"_id":"themes/yun/layout/_third-party/analytics/google-analytics.pug","hash":"3cb12c4ec3f5dbaeccf1a63a6aaa9e31dcaf926e","modified":1629019548253},{"_id":"themes/yun/layout/_third-party/analytics/leancloud-visitors.pug","hash":"181008f1a856253f54642e8a6129303716647a0c","modified":1629019548253},{"_id":"themes/yun/layout/_third-party/comments/disqus.pug","hash":"b84ee3aa7334f38a5c96b45e41fe7dd4c4c8870f","modified":1629019548253},{"_id":"themes/yun/layout/_third-party/comments/disqusjs.pug","hash":"e72cbb5ce02fb65e573964e1a2b0335789198b32","modified":1629019548253},{"_id":"themes/yun/layout/_third-party/comments/giscus.pug","hash":"f4c1eeb652839300b7358a117cb89cee72fa257b","modified":1629019548253},{"_id":"themes/yun/layout/_third-party/comments/github-discussions.pug","hash":"84ba9bc5f4c1daf9636648c181c9a781706fb18d","modified":1629019548253},{"_id":"themes/yun/layout/_third-party/comments/github-issues.pug","hash":"a2209c9d873b88a830c518d80a754fe2068e0b55","modified":1629019548253},{"_id":"themes/yun/layout/_third-party/comments/index.pug","hash":"5797929b55dbe98f136a71c947fb5112b897a3c6","modified":1629019548253},{"_id":"themes/yun/layout/_third-party/comments/livere.pug","hash":"b81ed4fb8a0ca32ccfb8e22c37ac48e4be1f4152","modified":1629019548253},{"_id":"themes/yun/layout/_third-party/comments/minivaline.pug","hash":"9df0dfb60176a2c53c2e76a94bfa107238853a3d","modified":1629019548253},{"_id":"themes/yun/layout/_third-party/comments/utterances.pug","hash":"712f893469f258e969806e1b55d0d2ac926761be","modified":1629019548253},{"_id":"themes/yun/layout/_third-party/comments/twikoo.pug","hash":"415f16c612b82f0d5e7ad468513363324e644c06","modified":1629019548253},{"_id":"themes/yun/layout/_third-party/comments/waline.pug","hash":"288f05e81141b525b3294baf1ea0b365f5e4b016","modified":1629019548253},{"_id":"themes/yun/layout/_third-party/math/index.pug","hash":"9a61d4923fad7c778f0bf2ce8c81744b126e6a1f","modified":1629019548253},{"_id":"themes/yun/layout/_third-party/comments/valine.pug","hash":"b6803c17e37d5e6eeb8d5315e85a36a8bb4e7915","modified":1629019548253},{"_id":"themes/yun/layout/_third-party/math/katex.pug","hash":"f296f8be36bf95034c7a3536e9203874dfabfaed","modified":1629019548253},{"_id":"themes/yun/layout/_third-party/seo/baidu-push.pug","hash":"0669b8c7e54c0a80e1f36e720e299cf0cd1182fe","modified":1629019548253},{"_id":"themes/yun/layout/_widget/search/index.pug","hash":"05271074172be21c014cd862a25f5112d0b3710c","modified":1629019548253},{"_id":"themes/yun/layout/_widget/search/algolia-search.pug","hash":"09a15ab356ebde0f9998fe7e39b2f154dea0543a","modified":1629019548253},{"_id":"themes/yun/layout/_widget/search/local-search.pug","hash":"d2ba600623043b2410f379fd7ba3cc75329ff408","modified":1629019548253},{"_id":"themes/yun/source/css/_components/button.styl","hash":"3315fc12b1b7659a06120b042a1a2e87a839ebe1","modified":1629019548263},{"_id":"themes/yun/source/css/_components/card.styl","hash":"1e5f8da293d53c6f352aa17fc625f88bd0840fa6","modified":1629019548263},{"_id":"themes/yun/source/css/_components/scrollbar.styl","hash":"2d735d019b58a1e6fea297e0027c33a4a7bc1858","modified":1629019548263},{"_id":"themes/yun/source/css/_components/ui.styl","hash":"8ef28ee3363f3676c9327a6d163032a003520f40","modified":1629019548263},{"_id":"themes/yun/source/css/_extend/girls.styl","hash":"e83c8b1219d0117bc342c40030e106b21245dddf","modified":1629019548263},{"_id":"themes/yun/source/css/_extend/albums.styl","hash":"1e7c7730c89b6d81da37f6565239679b5075234b","modified":1629019548263},{"_id":"themes/yun/source/css/_global/dark.styl","hash":"ed5c16ac8fcaf838c7ffded69df5a9a29167196d","modified":1629019548263},{"_id":"themes/yun/source/css/_global/reset.styl","hash":"d1640eb4f76a3cf792c5149e93c42c85da5a29b2","modified":1629019548263},{"_id":"themes/yun/source/css/_global/index.styl","hash":"01cc3bea8ddbcff5353f98edc6a5073ba89cc53c","modified":1629019548263},{"_id":"themes/yun/source/css/_layout/banner.styl","hash":"15d649e4b7707dc5b802415b32c2c9ab6168ffbe","modified":1629019548263},{"_id":"themes/yun/source/css/_layout/footer.styl","hash":"ed3afcddad7358ebd89f01846157e26a586e7adf","modified":1629019548263},{"_id":"themes/yun/source/css/_layout/grid.styl","hash":"743cef95e8fb940c0ae39657038ad32d76926587","modified":1629019548263},{"_id":"themes/yun/source/css/_layout/links.styl","hash":"3174cf42a1f79f814ea0a14798f6c5fe28b5dda9","modified":1629019548263},{"_id":"themes/yun/source/css/_layout/main.styl","hash":"2c39ba5d789224bdece3f7c16bc7a82b3e899bf4","modified":1629019548263},{"_id":"themes/yun/source/css/_layout/page.styl","hash":"52ff29d8bdc61dedb0a6515dd84cf015db67a499","modified":1629019548263},{"_id":"themes/yun/source/css/_layout/pagination.styl","hash":"00f95595a8937c7ce4c6069c78e8574600b67d73","modified":1629019548263},{"_id":"themes/yun/source/css/_layout/post.styl","hash":"29e0fe7a0f7948d551d37d1054d88524052baa3d","modified":1629019548263},{"_id":"themes/yun/source/css/_variables/_colors.styl","hash":"f7f492e8bd96c7054909fc360e392bc3984dae8d","modified":1629019548273},{"_id":"themes/yun/source/css/_variables/_base.styl","hash":"d94e4e978e4d9cdb361a906f2f417787ed86f86a","modified":1629019548273},{"_id":"themes/yun/source/css/_mixins/base.styl","hash":"0430e840b280cd6258c4cdf9397c49e89bff2682","modified":1629019548263},{"_id":"themes/yun/source/css/_mixins/helper.styl","hash":"09e560ae6db2bccaf39dff8882977cab2e9dec3b","modified":1629019548263},{"_id":"themes/yun/source/css/_widget/back-to-top.styl","hash":"5898b0c6c36fd1d2ff5408ca098e345ebf04008c","modified":1629019548273},{"_id":"themes/yun/source/css/_widget/say.styl","hash":"c47dd38477c08d31e0813610263200322e8f5ebe","modified":1629019548273},{"_id":"themes/yun/source/css/_widget/comment.styl","hash":"160f5c1ec0a42a5abf22d9c83d704934e2bbeb1d","modified":1629019548273},{"_id":"themes/yun/source/css/_widget/index.styl","hash":"a740126826a0ae9a1a2860fbb9c8d805d006aad6","modified":1629019548273},{"_id":"themes/yun/source/css/_widget/notice.styl","hash":"1d68860529a4fd8d3f63d2f257ed32b4e0f1167f","modified":1629019548273},{"_id":"themes/yun/source/css/_helper/index.styl","hash":"52e5f01d3f16d759e6e1ff56fa9c2d088c4a1639","modified":1629019548263},{"_id":"themes/yun/source/js/analytics/leancloud-visitors.js","hash":"7719a85b7da5ae52659451729fab52e065462f30","modified":1629019548273},{"_id":"themes/yun/source/js/comments/disqus.js","hash":"0fac74f042c0e8818a1d01580204d70d0ab13f52","modified":1629019548273},{"_id":"themes/yun/source/js/search/algolia-search.js","hash":"5133e150f4b0168bfe64ad5cbcb5625de08dd6b9","modified":1629019548273},{"_id":"themes/yun/source/js/search/local-search.js","hash":"7cfeb3474cb13664bdfc2c518371d409df406c6a","modified":1629019548273},{"_id":"themes/yun/source/js/ui/banner.js","hash":"09456f8f16e5f9300657bf23eba43e705561f76c","modified":1629019548283},{"_id":"themes/yun/source/js/ui/mode.js","hash":"42b868d77fcc5eac53f5520dd89db385595555d0","modified":1629019548283},{"_id":"themes/yun/docs/.vuepress/configs/sidebar/en.ts","hash":"d4165052889f5da2875133f26666b0670457cd34","modified":1629019548233},{"_id":"themes/yun/source/js/ui/fireworks.js","hash":"c98826194c90d35f64591c87f9bc64f5891af900","modified":1629019548283},{"_id":"themes/yun/docs/.vuepress/configs/sidebar/index.ts","hash":"ed15c6a7dbdee8aa77e1173872c9ffb90de7da94","modified":1629019548233},{"_id":"themes/yun/docs/.vuepress/configs/sidebar/zh.ts","hash":"0fe3ddf9980749481ff1fb8ea67ea76bdaaa3093","modified":1629019548233},{"_id":"themes/yun/docs/.vuepress/configs/navbar/en.ts","hash":"a18931aa190f969a3db6ed6c69d1fbc777e91bdd","modified":1629019548233},{"_id":"themes/yun/docs/.vuepress/configs/navbar/index.ts","hash":"d0c81b91c9965c33d93e73b8b94bea05abd5ba86","modified":1629019548233},{"_id":"themes/yun/docs/.vuepress/configs/navbar/zh.ts","hash":"94b6e931839601a59d3167873527196ff2ceb9dc","modified":1629019548233},{"_id":"themes/yun/docs/.vuepress/public/images/mickey-mouse.jpg","hash":"96a9449730d5149b8d114c2a7d8caaa364257dd0","modified":1629019548233},{"_id":"themes/yun/source/css/_components/post/post-card.styl","hash":"27374d94394f2a034436a7bd2a0806f020930dcc","modified":1629019548263},{"_id":"themes/yun/source/css/_components/post/post-codebloack.styl","hash":"c3cf80ace92d9ba5711cdf487f818cd31598866c","modified":1629019548263},{"_id":"themes/yun/source/css/_components/post/post-collapse.styl","hash":"6741c225a37e7e121d4159f129b7024402a8eeec","modified":1629019548263},{"_id":"themes/yun/source/css/_components/post/post-header.styl","hash":"2e674b76b47b3e6226269fe357d8b937b7a007a8","modified":1629019548263},{"_id":"themes/yun/source/css/_components/post/post-markdown.styl","hash":"4e4bc1030af90400e1dd3f9efa101aa1970dda9d","modified":1629019548263},{"_id":"themes/yun/source/css/_components/post/post-nav.styl","hash":"a9e5f18cee94944c43b0c09d6ec840b78c1f1aa0","modified":1629019548263},{"_id":"themes/yun/source/css/_components/post/post-reward.styl","hash":"454aa79758c9be46c8d8fa226b38e7ac1834ce3b","modified":1629019548263},{"_id":"themes/yun/source/css/_components/sidebar/sidebar.styl","hash":"21b2532c943e06bae70ed2a6b341b4816ce55898","modified":1629019548263},{"_id":"themes/yun/source/css/_components/sidebar/site-overview.styl","hash":"620772d3b2da06d94ef6fb25c6aee3c4eb48767b","modified":1629019548263},{"_id":"themes/yun/source/css/_components/sidebar/sidebar-nav.styl","hash":"d8feec6f13ca9bd714e4fe7189abf1907848efef","modified":1629019548263},{"_id":"themes/yun/source/css/_components/sidebar/hamburger.styl","hash":"0fa240e8a71fdad14d3fd6b3fd49cf697d4c8153","modified":1629019548263},{"_id":"themes/yun/docs/en/about/icon.md","hash":"1a3adbfb9d50b4e1a605b8daa22a168144da6386","modified":1629019548243},{"_id":"themes/yun/source/css/_components/sidebar/sidebar-toc.styl","hash":"b4b42a6dc949b52b5a861239905d333e1db6c64f","modified":1629019548263},{"_id":"themes/yun/docs/en/guide/config.md","hash":"7b27b7023cec3b2be1f6bb3fb4e6af362f6feff6","modified":1629019548243},{"_id":"themes/yun/source/css/_extend/tags/index.styl","hash":"1c4ae0e519bb8629425235f2efd80addfc2bee93","modified":1629019548263},{"_id":"themes/yun/source/css/_widget/search/algolia-search.styl","hash":"69916b23d54859160c4fda5ee809b8375fc56151","modified":1629019548273},{"_id":"themes/yun/source/css/_widget/search/index.styl","hash":"e3139db72a870c9791ee9cf206428e567e86f3f1","modified":1629019548273},{"_id":"themes/yun/source/css/_widget/search/local-search.styl","hash":"bcb8e5d593d49e370312e17eadf9f1e13aa22829","modified":1629019548273},{"_id":"themes/yun/source/css/_extend/tags/prompt.styl","hash":"553d59840e1c9217b49b902cfe1ac520bbf71e5c","modified":1629019548263},{"_id":"themes/yun/docs/.vuepress/public/images/index-preview.jpg","hash":"31aaa79aff97bdb98945c541d6bc698d450e078e","modified":1629019548233},{"_id":"public/about/index.html","hash":"f206dc28da21be9d5c03825ec872968ad2eb9075","modified":1629289667729},{"_id":"public/categories/index.html","hash":"4a472dbc085067c7ec5c2bfb4c5e2c82c3b1bb2a","modified":1629289667729},{"_id":"public/links/index-1.html","hash":"dc8d8727be19bb9bbbc2dcfb02a393161d9bf4a9","modified":1629289667729},{"_id":"public/links/index.html","hash":"706de43c22f4d2c9d2f0ad0ae6c45982500d184f","modified":1629289667729},{"_id":"public/tags/index.html","hash":"6e44bec336b492d18aa1fb47db2017faa9886a57","modified":1629289667729},{"_id":"public/xiaoyuan-blog/index.html","hash":"307668e59cbfddbea322bb5389c0a5300dc496ee","modified":1629289667729},{"_id":"public/2021/08/15/blog/index.html","hash":"bedffc83354df1b082312b9d55b1c1f92ee12f71","modified":1629289667729},{"_id":"public/2021/08/15/hello-world/index.html","hash":"048487d70545103d9c2f2c779acdab30557dde90","modified":1629289667729},{"_id":"public/archives/index.html","hash":"2ef0cee645e45090b2cb53761082d74396853010","modified":1629289667729},{"_id":"public/archives/2021/index.html","hash":"8cccc7fd6b960e1bd30d76aff4bad70559bdda31","modified":1629289667729},{"_id":"public/archives/2021/08/index.html","hash":"d0d814545b0d176bb5c43a7fcf966d1e957b5d95","modified":1629289667729},{"_id":"public/categories/Python随笔/index.html","hash":"9ccf8553286c6f899cfd98a6701961d8e12eaac6","modified":1629289667729},{"_id":"public/tags/Python/index.html","hash":"139a24c04eb0eb1cc7cf07e7090dc9c427323e88","modified":1629289667729},{"_id":"public/tags/学习/index.html","hash":"1dfa0c68d625f34f0505c33b43bcba0d4e5cf668","modified":1629289667729},{"_id":"public/tags/随笔/index.html","hash":"757cd19de5c1a6f7eca8a7d2860cffc4c397f1ee","modified":1629289667729},{"_id":"public/tags/test/index.html","hash":"58f669cddaa347b3abc5ea7c7b0d2e4c4924f1b2","modified":1629289667729},{"_id":"public/tags/测试/index.html","hash":"3bfc0bc0fd5be6318c6a16e452bf83cc8beef844","modified":1629289667729},{"_id":"public/2021/08/17/Python学习随笔/index.html","hash":"09f84c05557e2fbd7cb3d32839efb11ecdba11c3","modified":1629289667729},{"_id":"public/index.html","hash":"6ec9308347544586466940befde39689de20ef62","modified":1629289667729},{"_id":"public/images/avatar.png","hash":"c5551cc17420bc955b24cc9d04b643a653f43fa8","modified":1629289667729},{"_id":"public/Yun.png","hash":"b8ae426fa5dd7579d23d189c222641d812c51c0a","modified":1629289667729},{"_id":"public/yun.ico","hash":"5d63418cd650d1881d4b6507f35b9f9df766020e","modified":1629289667729},{"_id":"public/yun.svg","hash":"aa027a0a9e7ba96c906b9fd2d9cd3f8018ff2e2d","modified":1629289667729},{"_id":"public/js/gallery-decrypt.js","hash":"9fdbb18bc6f2df816497288d2d0d7d5171046ab1","modified":1629289667729},{"_id":"public/js/pjax.js","hash":"4fd54bd75d9eb751770543ad3dcf2ee03c8485c5","modified":1629289667729},{"_id":"public/js/hexo-theme-yun.js","hash":"ea104f1b49f4418c4168d29f8a12086bd91274df","modified":1629289667729},{"_id":"public/js/sidebar.js","hash":"0c97518a1d59422ef2af792ec8e550ba8c2d7233","modified":1629289667729},{"_id":"public/js/say.js","hash":"aac781102e8d03c7f07eb161d9d008822cda2bdd","modified":1629289667729},{"_id":"public/js/utils.js","hash":"a0befd581d3d533948ddc969d3772f91aecb8d00","modified":1629289667729},{"_id":"public/js/analytics/leancloud-visitors.js","hash":"7719a85b7da5ae52659451729fab52e065462f30","modified":1629289667729},{"_id":"public/js/comments/disqus.js","hash":"0fac74f042c0e8818a1d01580204d70d0ab13f52","modified":1629289667729},{"_id":"public/js/search/algolia-search.js","hash":"5133e150f4b0168bfe64ad5cbcb5625de08dd6b9","modified":1629289667729},{"_id":"public/js/ui/banner.js","hash":"09456f8f16e5f9300657bf23eba43e705561f76c","modified":1629289667729},{"_id":"public/js/search/local-search.js","hash":"7cfeb3474cb13664bdfc2c518371d409df406c6a","modified":1629289667729},{"_id":"public/js/ui/fireworks.js","hash":"5fea87a42f3f4b0cbb13fe8b46195e9bb41e64a5","modified":1629289667729},{"_id":"public/js/ui/mode.js","hash":"42b868d77fcc5eac53f5520dd89db385595555d0","modified":1629289667729},{"_id":"public/css/hexo-theme-yun.css","hash":"70718c0e62725f12675b2e33072dd50a24f89dcc","modified":1629289667729}],"Category":[{"name":"Python随笔","_id":"ckshh03tu0004rns660ul6rpu"}],"Data":[{"_id":"yun","data":{"avatar":{"url":"/images/avatar.png","rounded":true,"opacity":1},"banner":{"enable":true,"title":"臭臭の小站","src":"/js/ui/banner.js","border":true,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"}},"social":[{"name":"GitHub","link":"https://github.com/ssmzhn","icon":"icon-github-line","color":"#6e5494"},{"name":"网易云音乐","link":"http://music.163.com/m/user/home?id=1790526375","icon":"icon-netease-cloud-music-line","color":"#C20C0C"},{"name":"知乎","link":"https://www.zhihu.com/people/she-sha-ming-zi-hao-ni/","icon":"icon-zhihu-line","color":"#0084FF"},{"name":"哔哩哔哩","link":"https://b23.tv/n2PyuM","icon":"icon-bilibili-line","color":"#FF8EB3"},{"name":"Twitter","link":"https://twitter.com/ssmzhn12138","icon":"icon-twitter-line","color":"#1da1f2"},{"name":"Telegram","link":"https://t.me/NameSetter","icon":"icon-telegram-line","color":"#0088CC"},{"name":"E-Mail","link":"mailto:ssmzhn@163.com","icon":"icon-mail-line","color":"#8E71C1"}],"reward":{"enable":false},"pages":[{"name":"小伙伴们","url":"/links","icon":"icon-genderless-line","color":"dodgerblue"}],"notice":{"enable":true,"content":"来了就看看再走吧！"},"comment":{"enable":true,"tips":["若您想及时得到回复提醒，建议跳转 GitHub Issues 评论。","若没有本文 Issue，您可以使用 Comment 模版新建。"],"candidates":["utterances"]},"utterances":{"enable":true,"repo":"ssmzhn/ssmzhn.github.io","issue-term":"pathname","theme":"github-light"},"footer":{"since":2021,"live_time":{"enable":true,"prefix":"这个博客爬了","suffix":"😅","start_time":"2021-08-15T17:23:40"}},"wordcloud":{"enable":true},"highlight":{"enable":false},"prismjs":{"enable":true,"preprocess":true,"line_number":false,"tab_replace":""},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}}}}],"Page":[{"title":"about","date":"2021-08-16T00:31:55.000Z","_content":"\n您现在看到的是一篇\n我在准初三的时候写的文章\n\n虽然这个博客\n是我靠CV别人的代码，改配置得来的\n但是，它还是独一无二的\n因为，他是“属于我的”\n\n我在五年级的时候，入坑了B站\n从此，便认识了3M，TSK等大佬\n也加了一堆群，认识了一堆朋友\n\n后来的927事件，各大病毒up视频被删让我知道\nB站终究不是我应该呆的地方\n于是，我便停止在B站上更新\n开始在各个群里水群\n\n如今，我有了博客——一个真正属于我的地方\n在这里，我可以聊大天，写随笔——还有恶臭（捂脸）\n在这里，我不用担心被喷\n\n我不会发表超出法律界限以外的言论\n希望这里，是属于我的，永恒的净土。\n\nBy NameSetter\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2021-08-16 08:31:55\n---\n\n您现在看到的是一篇\n我在准初三的时候写的文章\n\n虽然这个博客\n是我靠CV别人的代码，改配置得来的\n但是，它还是独一无二的\n因为，他是“属于我的”\n\n我在五年级的时候，入坑了B站\n从此，便认识了3M，TSK等大佬\n也加了一堆群，认识了一堆朋友\n\n后来的927事件，各大病毒up视频被删让我知道\nB站终究不是我应该呆的地方\n于是，我便停止在B站上更新\n开始在各个群里水群\n\n如今，我有了博客——一个真正属于我的地方\n在这里，我可以聊大天，写随笔——还有恶臭（捂脸）\n在这里，我不用担心被喷\n\n我不会发表超出法律界限以外的言论\n希望这里，是属于我的，永恒的净土。\n\nBy NameSetter\n","updated":"2021-08-16T00:47:17.560Z","path":"about/index.html","comments":1,"layout":"page","_id":"ckshh03qu0000rns695lf05pc","content":"<p>您现在看到的是一篇<br>我在准初三的时候写的文章</p>\n<p>虽然这个博客<br>是我靠CV别人的代码，改配置得来的<br>但是，它还是独一无二的<br>因为，他是“属于我的”</p>\n<p>我在五年级的时候，入坑了B站<br>从此，便认识了3M，TSK等大佬<br>也加了一堆群，认识了一堆朋友</p>\n<p>后来的927事件，各大病毒up视频被删让我知道<br>B站终究不是我应该呆的地方<br>于是，我便停止在B站上更新<br>开始在各个群里水群</p>\n<p>如今，我有了博客——一个真正属于我的地方<br>在这里，我可以聊大天，写随笔——还有恶臭（捂脸）<br>在这里，我不用担心被喷</p>\n<p>我不会发表超出法律界限以外的言论<br>希望这里，是属于我的，永恒的净土。</p>\n<p>By NameSetter</p>\n","site":{"data":{"yun":{"avatar":{"url":"/images/avatar.png","rounded":true,"opacity":1},"banner":{"enable":true,"title":"臭臭の小站","src":"/js/ui/banner.js","border":true,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"}},"social":[{"name":"GitHub","link":"https://github.com/ssmzhn","icon":"icon-github-line","color":"#6e5494"},{"name":"网易云音乐","link":"http://music.163.com/m/user/home?id=1790526375","icon":"icon-netease-cloud-music-line","color":"#C20C0C"},{"name":"知乎","link":"https://www.zhihu.com/people/she-sha-ming-zi-hao-ni/","icon":"icon-zhihu-line","color":"#0084FF"},{"name":"哔哩哔哩","link":"https://b23.tv/n2PyuM","icon":"icon-bilibili-line","color":"#FF8EB3"},{"name":"Twitter","link":"https://twitter.com/ssmzhn12138","icon":"icon-twitter-line","color":"#1da1f2"},{"name":"Telegram","link":"https://t.me/NameSetter","icon":"icon-telegram-line","color":"#0088CC"},{"name":"E-Mail","link":"mailto:ssmzhn@163.com","icon":"icon-mail-line","color":"#8E71C1"}],"reward":{"enable":false},"pages":[{"name":"小伙伴们","url":"/links","icon":"icon-genderless-line","color":"dodgerblue"}],"notice":{"enable":true,"content":"来了就看看再走吧！"},"comment":{"enable":true,"tips":["若您想及时得到回复提醒，建议跳转 GitHub Issues 评论。","若没有本文 Issue，您可以使用 Comment 模版新建。"],"candidates":["utterances"]},"utterances":{"enable":true,"repo":"ssmzhn/ssmzhn.github.io","issue-term":"pathname","theme":"github-light"},"footer":{"since":2021,"live_time":{"enable":true,"prefix":"这个博客爬了","suffix":"😅","start_time":"2021-08-15T17:23:40"}},"wordcloud":{"enable":true},"highlight":{"enable":false},"prismjs":{"enable":true,"preprocess":true,"line_number":false,"tab_replace":""},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}}}}},"excerpt":"","more":"<p>您现在看到的是一篇<br>我在准初三的时候写的文章</p>\n<p>虽然这个博客<br>是我靠CV别人的代码，改配置得来的<br>但是，它还是独一无二的<br>因为，他是“属于我的”</p>\n<p>我在五年级的时候，入坑了B站<br>从此，便认识了3M，TSK等大佬<br>也加了一堆群，认识了一堆朋友</p>\n<p>后来的927事件，各大病毒up视频被删让我知道<br>B站终究不是我应该呆的地方<br>于是，我便停止在B站上更新<br>开始在各个群里水群</p>\n<p>如今，我有了博客——一个真正属于我的地方<br>在这里，我可以聊大天，写随笔——还有恶臭（捂脸）<br>在这里，我不用担心被喷</p>\n<p>我不会发表超出法律界限以外的言论<br>希望这里，是属于我的，永恒的净土。</p>\n<p>By NameSetter</p>\n"},{"date":"2021-08-16T13:45:34.000Z","comments":0,"type":"categories","_content":"","source":"categories/index.md","raw":"---\ndate: 2021-08-16 21:45:34\ncomments: false\ntype: categories\n---\n","updated":"2021-08-16T13:46:21.808Z","path":"categories/index.html","title":"","layout":"page","_id":"ckshh03t00002rns6hj248fmr","content":"","site":{"data":{"yun":{"avatar":{"url":"/images/avatar.png","rounded":true,"opacity":1},"banner":{"enable":true,"title":"臭臭の小站","src":"/js/ui/banner.js","border":true,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"}},"social":[{"name":"GitHub","link":"https://github.com/ssmzhn","icon":"icon-github-line","color":"#6e5494"},{"name":"网易云音乐","link":"http://music.163.com/m/user/home?id=1790526375","icon":"icon-netease-cloud-music-line","color":"#C20C0C"},{"name":"知乎","link":"https://www.zhihu.com/people/she-sha-ming-zi-hao-ni/","icon":"icon-zhihu-line","color":"#0084FF"},{"name":"哔哩哔哩","link":"https://b23.tv/n2PyuM","icon":"icon-bilibili-line","color":"#FF8EB3"},{"name":"Twitter","link":"https://twitter.com/ssmzhn12138","icon":"icon-twitter-line","color":"#1da1f2"},{"name":"Telegram","link":"https://t.me/NameSetter","icon":"icon-telegram-line","color":"#0088CC"},{"name":"E-Mail","link":"mailto:ssmzhn@163.com","icon":"icon-mail-line","color":"#8E71C1"}],"reward":{"enable":false},"pages":[{"name":"小伙伴们","url":"/links","icon":"icon-genderless-line","color":"dodgerblue"}],"notice":{"enable":true,"content":"来了就看看再走吧！"},"comment":{"enable":true,"tips":["若您想及时得到回复提醒，建议跳转 GitHub Issues 评论。","若没有本文 Issue，您可以使用 Comment 模版新建。"],"candidates":["utterances"]},"utterances":{"enable":true,"repo":"ssmzhn/ssmzhn.github.io","issue-term":"pathname","theme":"github-light"},"footer":{"since":2021,"live_time":{"enable":true,"prefix":"这个博客爬了","suffix":"😅","start_time":"2021-08-15T17:23:40"}},"wordcloud":{"enable":true},"highlight":{"enable":false},"prismjs":{"enable":true,"preprocess":true,"line_number":false,"tab_replace":""},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}}}}},"excerpt":"","more":""},{"title":"links","date":"2021-08-15T23:12:27.000Z","_content":"","source":"links/index-1.md","raw":"---\ntitle: links\ndate: 2021-08-16 07:12:27\n---\n","updated":"2021-08-15T23:12:27.479Z","path":"links/index-1.html","comments":1,"layout":"page","_id":"ckshh03uk0006rns630elev19","content":"","site":{"data":{"yun":{"avatar":{"url":"/images/avatar.png","rounded":true,"opacity":1},"banner":{"enable":true,"title":"臭臭の小站","src":"/js/ui/banner.js","border":true,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"}},"social":[{"name":"GitHub","link":"https://github.com/ssmzhn","icon":"icon-github-line","color":"#6e5494"},{"name":"网易云音乐","link":"http://music.163.com/m/user/home?id=1790526375","icon":"icon-netease-cloud-music-line","color":"#C20C0C"},{"name":"知乎","link":"https://www.zhihu.com/people/she-sha-ming-zi-hao-ni/","icon":"icon-zhihu-line","color":"#0084FF"},{"name":"哔哩哔哩","link":"https://b23.tv/n2PyuM","icon":"icon-bilibili-line","color":"#FF8EB3"},{"name":"Twitter","link":"https://twitter.com/ssmzhn12138","icon":"icon-twitter-line","color":"#1da1f2"},{"name":"Telegram","link":"https://t.me/NameSetter","icon":"icon-telegram-line","color":"#0088CC"},{"name":"E-Mail","link":"mailto:ssmzhn@163.com","icon":"icon-mail-line","color":"#8E71C1"}],"reward":{"enable":false},"pages":[{"name":"小伙伴们","url":"/links","icon":"icon-genderless-line","color":"dodgerblue"}],"notice":{"enable":true,"content":"来了就看看再走吧！"},"comment":{"enable":true,"tips":["若您想及时得到回复提醒，建议跳转 GitHub Issues 评论。","若没有本文 Issue，您可以使用 Comment 模版新建。"],"candidates":["utterances"]},"utterances":{"enable":true,"repo":"ssmzhn/ssmzhn.github.io","issue-term":"pathname","theme":"github-light"},"footer":{"since":2021,"live_time":{"enable":true,"prefix":"这个博客爬了","suffix":"😅","start_time":"2021-08-15T17:23:40"}},"wordcloud":{"enable":true},"highlight":{"enable":false},"prismjs":{"enable":true,"preprocess":true,"line_number":false,"tab_replace":""},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}}}}},"excerpt":"","more":""},{"layout":"links","title":"我的小伙伴们","date":"2021-08-15T14:44:56.000Z","keywords":"链接","description":"一起来恶臭罢","comments":1,"links":[{"url":"https://chitang233.github.io","avatar":"https://s1.ax1x.com/2020/06/26/NrySjf.png","name":"Chi_Tang","blog":"池塘的小站","desc":"池塘gg的小站，快来玩罢","color":"#3c4d67","email":"bilibilichitang@hotmail.com"},{"url":"https://win10memz.github.io","avatar":"https://s1.ax1x.com/2020/06/27/N6dm5R.jpg","name":"One_AR","blog":"One_AR的小站","desc":"一起扔大粪罢","color":"#aba81d","email":"mifen2017@qq.com"},{"url":"https://cuya.xyz","avatar":"http://q1.qlogo.cn/g?b=qq&nk=3272912942&s=640","name":"purofle","blog":"None的小站","desc":"一个沙雕","color":"#c3907e","email":"oh@myshit.code"},{"url":"https://kiteab.awa.im","avatar":"https://kiteab.awa.im/images/avatar.png","name":"KiteAB","blog":"KiteAB的小站","desc":"又一个沙雕","email":"kiteabpl@outlook.com"},{"url":"https://blog.233.pink","avatar":"https://q1.qlogo.cn/g?b=qq&nk=2711521586&s=640","name":"ilyfairy","blog":"ilyfairy's blog","desc":"可爱~想rua~","color":"#dbadaf","email":"me@ilyfairy.com"},{"url":"https://ssmzhn.github.io/xiaoyuan-blog","avatar":"https://q1.qlogo.cn/g?b=qq&nk=3627046040&s=640","name":"小源151","blog":"小源151的blog","desc":"大主播太牛了","email":"xiaoyuan2233666@163.com"}],"placeholder":"还没想好说些什么","tip":"友链加载中～如失败请刷新重试～","_content":"\n","source":"links/index.md","raw":"---\nlayout: links\ntitle: 我的小伙伴们\ndate: 2021-08-15 22:44:56\nkeywords: 链接\ndescription: 一起来恶臭罢\ncomments: true\nlinks:\n  - url: https://chitang233.github.io\n    avatar: https://s1.ax1x.com/2020/06/26/NrySjf.png\n    name: Chi_Tang\n    blog: 池塘的小站\n    desc: 池塘gg的小站，快来玩罢\n    color: \"#3c4d67\" # 代表色\n    email: bilibilichitang@hotmail.com\n  - url: https://win10memz.github.io\n    avatar: https://s1.ax1x.com/2020/06/27/N6dm5R.jpg\n    name: One_AR\n    blog: One_AR的小站\n    desc: 一起扔大粪罢\n    color: \"#aba81d\"\n    email: mifen2017@qq.com\n  - url: https://cuya.xyz\n    avatar: http://q1.qlogo.cn/g?b=qq&nk=3272912942&s=640\n    name: purofle\n    blog: None的小站\n    desc: 一个沙雕\n    color: \"#c3907e\"\n    email: oh@myshit.code\n  - url: https://kiteab.awa.im\n    avatar: https://kiteab.awa.im/images/avatar.png\n    name: KiteAB\n    blog: KiteAB的小站\n    desc: 又一个沙雕\n    email: kiteabpl@outlook.com\n  - url: https://blog.233.pink\n    avatar: https://q1.qlogo.cn/g?b=qq&nk=2711521586&s=640\n    name: ilyfairy\n    blog: ilyfairy's blog\n    desc: 可爱~想rua~\n    color: \"#dbadaf\"\n    email: me@ilyfairy.com\n  - url: https://ssmzhn.github.io/xiaoyuan-blog\n    avatar: https://q1.qlogo.cn/g?b=qq&nk=3627046040&s=640\n    name: 小源151\n    blog: 小源151的blog\n    desc: 大主播太牛了\n    email: xiaoyuan2233666@163.com\n\nplaceholder: 还没想好说些什么 # 默认对友链的描述\ntip: 友链加载中～如失败请刷新重试～ \n---\n\n","updated":"2021-08-18T12:27:05.545Z","path":"links/index.html","_id":"ckshh03v10007rns6a21o5k0j","content":"","site":{"data":{"yun":{"avatar":{"url":"/images/avatar.png","rounded":true,"opacity":1},"banner":{"enable":true,"title":"臭臭の小站","src":"/js/ui/banner.js","border":true,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"}},"social":[{"name":"GitHub","link":"https://github.com/ssmzhn","icon":"icon-github-line","color":"#6e5494"},{"name":"网易云音乐","link":"http://music.163.com/m/user/home?id=1790526375","icon":"icon-netease-cloud-music-line","color":"#C20C0C"},{"name":"知乎","link":"https://www.zhihu.com/people/she-sha-ming-zi-hao-ni/","icon":"icon-zhihu-line","color":"#0084FF"},{"name":"哔哩哔哩","link":"https://b23.tv/n2PyuM","icon":"icon-bilibili-line","color":"#FF8EB3"},{"name":"Twitter","link":"https://twitter.com/ssmzhn12138","icon":"icon-twitter-line","color":"#1da1f2"},{"name":"Telegram","link":"https://t.me/NameSetter","icon":"icon-telegram-line","color":"#0088CC"},{"name":"E-Mail","link":"mailto:ssmzhn@163.com","icon":"icon-mail-line","color":"#8E71C1"}],"reward":{"enable":false},"pages":[{"name":"小伙伴们","url":"/links","icon":"icon-genderless-line","color":"dodgerblue"}],"notice":{"enable":true,"content":"来了就看看再走吧！"},"comment":{"enable":true,"tips":["若您想及时得到回复提醒，建议跳转 GitHub Issues 评论。","若没有本文 Issue，您可以使用 Comment 模版新建。"],"candidates":["utterances"]},"utterances":{"enable":true,"repo":"ssmzhn/ssmzhn.github.io","issue-term":"pathname","theme":"github-light"},"footer":{"since":2021,"live_time":{"enable":true,"prefix":"这个博客爬了","suffix":"😅","start_time":"2021-08-15T17:23:40"}},"wordcloud":{"enable":true},"highlight":{"enable":false},"prismjs":{"enable":true,"preprocess":true,"line_number":false,"tab_replace":""},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}}}}},"excerpt":"","more":""},{"date":"2021-08-16T13:40:01.000Z","comments":0,"type":"tags","_content":"","source":"tags/index.md","raw":"---\ndate: 2021-08-16 21:40:01\ncomments: false\ntype: tags\n---\n","updated":"2021-08-16T13:42:13.758Z","path":"tags/index.html","title":"","layout":"page","_id":"ckshh03va0008rns65cce51ra","content":"","site":{"data":{"yun":{"avatar":{"url":"/images/avatar.png","rounded":true,"opacity":1},"banner":{"enable":true,"title":"臭臭の小站","src":"/js/ui/banner.js","border":true,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"}},"social":[{"name":"GitHub","link":"https://github.com/ssmzhn","icon":"icon-github-line","color":"#6e5494"},{"name":"网易云音乐","link":"http://music.163.com/m/user/home?id=1790526375","icon":"icon-netease-cloud-music-line","color":"#C20C0C"},{"name":"知乎","link":"https://www.zhihu.com/people/she-sha-ming-zi-hao-ni/","icon":"icon-zhihu-line","color":"#0084FF"},{"name":"哔哩哔哩","link":"https://b23.tv/n2PyuM","icon":"icon-bilibili-line","color":"#FF8EB3"},{"name":"Twitter","link":"https://twitter.com/ssmzhn12138","icon":"icon-twitter-line","color":"#1da1f2"},{"name":"Telegram","link":"https://t.me/NameSetter","icon":"icon-telegram-line","color":"#0088CC"},{"name":"E-Mail","link":"mailto:ssmzhn@163.com","icon":"icon-mail-line","color":"#8E71C1"}],"reward":{"enable":false},"pages":[{"name":"小伙伴们","url":"/links","icon":"icon-genderless-line","color":"dodgerblue"}],"notice":{"enable":true,"content":"来了就看看再走吧！"},"comment":{"enable":true,"tips":["若您想及时得到回复提醒，建议跳转 GitHub Issues 评论。","若没有本文 Issue，您可以使用 Comment 模版新建。"],"candidates":["utterances"]},"utterances":{"enable":true,"repo":"ssmzhn/ssmzhn.github.io","issue-term":"pathname","theme":"github-light"},"footer":{"since":2021,"live_time":{"enable":true,"prefix":"这个博客爬了","suffix":"😅","start_time":"2021-08-15T17:23:40"}},"wordcloud":{"enable":true},"highlight":{"enable":false},"prismjs":{"enable":true,"preprocess":true,"line_number":false,"tab_replace":""},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}}}}},"excerpt":"","more":""},{"title":"小源的博客","date":"2021-08-18T12:16:02.000Z","comments":0,"_content":"# 大主播的博客！\n\n## 性感小源，在线手撸html\n[小源早期手撸html做博客珍贵影像](https://xiaoyuan151.github.io/MyWebsite)\n\n## 低贱的Hexo\n[套Hexo的小源是屑](https://xiaoyuan151.github.io)\n\n~~当然我也是套的~~\n","source":"xiaoyuan-blog/index.md","raw":"---\ntitle: 小源的博客\ndate: 2021-08-18 20:16:02\ncomments: False\n---\n# 大主播的博客！\n\n## 性感小源，在线手撸html\n[小源早期手撸html做博客珍贵影像](https://xiaoyuan151.github.io/MyWebsite)\n\n## 低贱的Hexo\n[套Hexo的小源是屑](https://xiaoyuan151.github.io)\n\n~~当然我也是套的~~\n","updated":"2021-08-18T12:21:26.315Z","path":"xiaoyuan-blog/index.html","layout":"page","_id":"ckshh03vn000arns64f30cl1x","content":"<h1 id=\"大主播的博客！\"><a href=\"#大主播的博客！\" class=\"headerlink\" title=\"大主播的博客！\"></a>大主播的博客！</h1><h2 id=\"性感小源，在线手撸html\"><a href=\"#性感小源，在线手撸html\" class=\"headerlink\" title=\"性感小源，在线手撸html\"></a>性感小源，在线手撸html</h2><p><a href=\"https://xiaoyuan151.github.io/MyWebsite\">小源早期手撸html做博客珍贵影像</a></p>\n<h2 id=\"低贱的Hexo\"><a href=\"#低贱的Hexo\" class=\"headerlink\" title=\"低贱的Hexo\"></a>低贱的Hexo</h2><p><a href=\"https://xiaoyuan151.github.io/\">套Hexo的小源是屑</a></p>\n<p><del>当然我也是套的</del></p>\n","site":{"data":{"yun":{"avatar":{"url":"/images/avatar.png","rounded":true,"opacity":1},"banner":{"enable":true,"title":"臭臭の小站","src":"/js/ui/banner.js","border":true,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"}},"social":[{"name":"GitHub","link":"https://github.com/ssmzhn","icon":"icon-github-line","color":"#6e5494"},{"name":"网易云音乐","link":"http://music.163.com/m/user/home?id=1790526375","icon":"icon-netease-cloud-music-line","color":"#C20C0C"},{"name":"知乎","link":"https://www.zhihu.com/people/she-sha-ming-zi-hao-ni/","icon":"icon-zhihu-line","color":"#0084FF"},{"name":"哔哩哔哩","link":"https://b23.tv/n2PyuM","icon":"icon-bilibili-line","color":"#FF8EB3"},{"name":"Twitter","link":"https://twitter.com/ssmzhn12138","icon":"icon-twitter-line","color":"#1da1f2"},{"name":"Telegram","link":"https://t.me/NameSetter","icon":"icon-telegram-line","color":"#0088CC"},{"name":"E-Mail","link":"mailto:ssmzhn@163.com","icon":"icon-mail-line","color":"#8E71C1"}],"reward":{"enable":false},"pages":[{"name":"小伙伴们","url":"/links","icon":"icon-genderless-line","color":"dodgerblue"}],"notice":{"enable":true,"content":"来了就看看再走吧！"},"comment":{"enable":true,"tips":["若您想及时得到回复提醒，建议跳转 GitHub Issues 评论。","若没有本文 Issue，您可以使用 Comment 模版新建。"],"candidates":["utterances"]},"utterances":{"enable":true,"repo":"ssmzhn/ssmzhn.github.io","issue-term":"pathname","theme":"github-light"},"footer":{"since":2021,"live_time":{"enable":true,"prefix":"这个博客爬了","suffix":"😅","start_time":"2021-08-15T17:23:40"}},"wordcloud":{"enable":true},"highlight":{"enable":false},"prismjs":{"enable":true,"preprocess":true,"line_number":false,"tab_replace":""},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}}}}},"excerpt":"","more":"<h1 id=\"大主播的博客！\"><a href=\"#大主播的博客！\" class=\"headerlink\" title=\"大主播的博客！\"></a>大主播的博客！</h1><h2 id=\"性感小源，在线手撸html\"><a href=\"#性感小源，在线手撸html\" class=\"headerlink\" title=\"性感小源，在线手撸html\"></a>性感小源，在线手撸html</h2><p><a href=\"https://xiaoyuan151.github.io/MyWebsite\">小源早期手撸html做博客珍贵影像</a></p>\n<h2 id=\"低贱的Hexo\"><a href=\"#低贱的Hexo\" class=\"headerlink\" title=\"低贱的Hexo\"></a>低贱的Hexo</h2><p><a href=\"https://xiaoyuan151.github.io/\">套Hexo的小源是屑</a></p>\n<p><del>当然我也是套的</del></p>\n"}],"Post":[{"title":"Python学习随笔","date":"2021-08-17T00:08:21.000Z","_content":"# 开始使用Python!\n\nPython是一门上手容易的解释性语言，非常适合初学者使用。\n本篇博客以Python 3.9进行介绍。\n\n## 你好，世界！\n\n学一门语言，首先要知道他的输出语句\n\nPython的输出语句为`print()`  \n试着在Python终端里面输入`print('Hello world')`  \n输出：\n\n```\nHello world\n```\n\n很好，你已经编写了第一行Python语句！\n\n`print()`的标准格式为：\n\n```python\nprint(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n```\n\n但是初学者并不需要掌握那么多。  \n只需知道`print(对象)`就行了。\n\n## 帮助\n\n为了少走弯路，必须学会看文档。\n\n输入：\n```python\nhelp()\n```\n可以进入help命令行。\n\n输入：\n```python\nhelp(你想查询的对象)\n```\n可以获取该对象的帮助文档。\n\n## 变量\n\n### 啥是变量？\n\n简单来说，变量就是一个特殊的名字，里面存着一些对象，这些对象可以改变。\n\n### 变量怎么定义？\nPython的变量无需声明，直接拿来用就好了。\n\n什么意思？  \n> 举个例子，有一个人前来买瓜，他直接把老板捅了，这就叫不声明直接使用。  \n> 有一个人前来买瓜，他先和老板唠唠嗑，再把老板捅了，这就叫声明后使用。\n\n开个玩笑。\n\n像C语言，变量必须先`int val;`，然后再`val=114514;`，前面有一个声明的过程，相当于和计算机说一下“我有个变量要用”。  \n~~这个变量为什么这么臭啊~~\n\n而Python呢，直接`val=114514`，不需要和计算机说明“我有个变量要用”。  \n~~这变量太臭了不能要了~~\n\n> 所以你还是没说怎么变量怎么定义啊喂！\n\n上面的，别着急。\n\n变量的定义方式是`变量名=对象`。  \n例如：\n\n```python\na=1\nb=2\nsenpai=114514\nshout='哼哼哼啊啊啊啊啊啊啊啊啊啊啊'\n```\n\n~~好像混进了奇怪的东西~~\n\n注意：变量名只能以字母，汉字（这个看编码）或下划线开头，不可以和保留关键字相同，如果相同，保留关键字将会被替代\n\n> 保留关键字就是Python内部的一些类名、函数名等等，包括`int`, `float`等等\n\n### 变量能干嘛？\n\n变量可以参与运算，作为参数传入函数等等。\n\n在Python控制台输入以下代码：\n\n```python\na=114\nb=514\ns='哼哼哼啊啊啊啊啊啊啊啊啊啊啊'\n```\n\n再执行这行代码：\n\n```python\nprint(a)\nprint(b)\nprint(s)\n```\n\n输出：\n\n```\n114\n514\n哼哼哼啊啊啊啊啊啊啊啊啊啊啊\n```\n\n而不是：\n\n```\na\nb\ns\n```\n\n这样，a, b, s就变成参数传入print()函数里了，输出的是变量代表的对象，而不是变量名。\n\n输入：\n\n```python\nprint(a+b)\n```\n\n输出：\n\n```\n628\n```\n\n可以看到，变量参与了运算。\n\n### 改变变量的值（赋值）\n和定义变量差不多，直接`变量名=对象`就完事了。\n\n有几个特殊的赋值方法：`+=`, `-=`, `*=`, `/=`, `**=`, `//=`, `%=`，表示将前面和后面的对象先运算，再将结果赋值到前面的变量。  \n例如`a+=1`等价于`a=a+1`。\n\n## 一些数据类型\n\n### 简单介绍\n\n严格来说，Python里面的“数据类型”应该叫类，毕竟是面相对象嘛\n\n> 面相对象和类是啥？\n\n这个以后再说。\n\n```python\na='哼哼哼啊啊啊啊啊啊啊啊啊啊啊'\n#a是一个字符串(str)对象\nb=114514\n#b是一个整数(int)对象\nc=0.1919810\n#c是一个实数(float)对象\nd=[1,1,4,5,1,4]\n#d是一个列表(list)对象\ne=(1,9,1,9,8,1,0)\n#e是一个元组/定值表(tuple)对象\nf={'a':1,'b':2,'c':3}\n#f是一个字典(dictionary/dict)对象\ng=True\n#g是一个布尔(bool)对象\n```\n\n另外，用`type()`函数可以查看变量所属的数据类型（类）。  \n用法：\n\n```python\na=114514\ntype(a)\n```\n\n输出：\n\n```\nint\n```\n\n### list, tuple, str, dict\n\n#### list\n\nPython中的列表，一个列表可以存储一组对象，`list`由`[]`括起来。\n\n```\na=[1,2,3]\n```\n上述代码，定义了一个`list`，内容为`[1,2,3]`。\n\n可以通过`a[index]`来访问列表中的元素。  \n`index`为下标，下标从`0`开始，到`列表长度-1`结束。  \n如上述代码中，`a[0]`为`1`，`a[1]`为`2`，`a[2]`为`3`。  \n下标为负，表示从后往前数，比如`a[-1]`为最后一个元素，为`3`。\n\n#### tuple\n\n`tuple`意为“元组”或者“定值表”，相当于不能改变内容的`list`，元组用`()`括起来\n下标访问和`list`类似，就不重复了。\n\n例：\n\n```python\na=(1,2,3,4)\n```\n上述代码定义了一个`tuple`。\n\n#### str\n\n字符串，是一种特殊的`tuple`，用一对`'`或者`\"`括起来。\n\n例：\n\n```python\na='abcd'\nb=\"efg\"\n```\n\n#### dict\n\n意为“字典”，相当于能自定义下标类型的`list`。\n\n定义方法，例：\n\n```python\na={'test':1,'hmm':2}\n```\n\n其中：`test`和`hmm`为下标，可以用`a[index]`访问。  \n`1`和`2`为下标对应的值。\n\n如：`a['test']`即为`1`，`a['hmm']`即为`2`。\n\n## 一些常见的运算\n\nPython内置的运算符有`+`，`-`，`*`，`/`，`**`，`//`，`%`，`and`，`or`\n，`not`，`in`等等，我没有列举全。\n\n### 算术运算符\n\n#### +\n\n`+`，顾名思义，在`int`和`float`中和数学里的`+`是一样的\n\n例如：\n\n```python\n>>> 1+1\n2\n>>> 1.1+2.2\n3.3\n```\n\n在一些可遍历的数据类型，如`str`, `list`, `tuple`, `dict`中，`+`仅仅把两个对象合在一起。\n\n例如：\n\n```python\n>>> [1,2]+[3,4]\n[1, 2, 3, 4]\n\n>>> 'abc'+'def'\n'abcdef'\n\n>>> ('a','b')+('c','d')\n('a','b','c','d')\n```\n\n#### -\n\n`-`只支持`float`和`int`，和数学上的`-`类似。\n\n```python\n>>> 2-1\n1\n>>> 8.8-7.8\n1.0\n```\n\n#### *\n\n同`-`，和数学上的`*`类似。\n\n```python\n>>> 9*9\n81\n>>> 5*8\n40\n```\n\n#### /\n\n除法，返回`float`类型\n\n```python\n>>> 1/2\n0.5\n>>> 2/2\n1.0\n```\n\n#### **\n\n乘方，仅支持`int`和`float`类型\n\n```python\n>>> 9**2\n81\n```\n\n#### //\n\n整除，向下取整（去掉小数部分）\n\n```python\n>>> 2//3\n0\n>>> 2//2\n1\n```\n\n#### %\n\n模，取余数\n\n```python\n>>> 3%2\n1\n>>> 3%(-2)\n-1\n>>> (-3)%2\n1\n>>> (-3)%(-2)\n-1\n```\n\n### 逻辑运算符\n\n#### ==\n两个赋值号，为等于号。  \n如果两边的值一样，返回`True`，否则返回`False`。\n\n例：\n```python\n>>> 1 == 2\nFalse\n>>> 1 == 1\nTrue\n```\n\n#### !=\n这个符号为不等号，作用和等于号相反。\n\n例：\n```python\n>>> 1 != 2\nTrue\n>>> 1 != 1\nFalse\n```\n\n#### <, >, <=, >=\n小于号，大于号，小于等于号和大于等于号。  \n式子成立，返回`True`，反之返回`False`。\n\n例：\n```python\n>>> 1 < 2\nTrue\n>>> 1 > 2\nFalse\n>>> 1 <= 1\nTrue\n>>> 1 >= 1\nTrue\n```\n\n#### and, or\n字面意思，`and`为“与”，`or`为“或”。\n\n`and`和`or`都是双目运算符，即左右两边都有一个对象参与运算。\n\n例：\n```python\n>>> True and False\nFalse\n>>> True or False\nTrue\n```\n\n什么意思？当`and`两边都是非0值时，返回`True`，反之返回`False`。  \n当`or`两边都不是非0值时，返回`False`，反之返回`True`。\n\n#### not\n字面意思，“非”。\n\n`not`为单目运算符，只需要一个对象参与运算。\n\n例：\n```python\n>>> not True\nFalse\n>>> not False\nTrue\n```\n\n`not`返回他后面对象的相反值。\n\n#### in\n`in`意为“是否在……中”，是返回`True`，不是返回`False`。\n例：\n```python\n>>> 1 in (1,2)\nTrue\n>>> 1 in [3,4]\nFalse\n>>> 'a' in 'ab'\nTrue\n```\n注：后面那个对象只能是可遍历的数据类型。\n\n## 判断语句\n\nPython中的判断语句为`if`。\n\n`if`语句的格式：\n```python\nif val1:\n    ...\nelif val2:\n    ...\nelif val3:\n    ...\nelse:\n    ...\n```\n注：Python对缩进极为严格，缩进一定要是4个空格或者一个`Tab`！\n\n这段代码的意思是：  \n先看`if val1`，如果`val1`为非0值，那么执行`val1`下的语句块。  \n如果为0，那么再看`elif val2`……  \n如果上述`if`, `elif`都不执行的话，执行最后一个`else`下面的语句块。\n\n`val1`, `val2`等等都是一个`bool`值。如果不是，Python将自动转换。\n\n其中，`elif`, `else`都可以不出现，所以这段代码还有这样的写法：\n```python\nif val1:\n    ...\n```\n\n\n```python\nif val1:\n    ...\nelif val2:\n    ...\nelif val3:\n    ...\n```\n\n\n```python\nif val1:\n    ...\nelse:\n    ...\n```\n\n## 循环语句\n\nPython的循环语句主要有`while`, `for`两种形式。\n\n### while\n`while`语句的格式为：\n```python\nwhile val:\n    ...\n```\n\n这段代码的意思为：当`val`为非0值时，循环执行下面的代码，直到`val`为0时，跳出循环。\n\n例：\n```python\na=1\nwhile a<=5:\n    print(a)\n    a+=1\n```\n输出：\n```\n1\n2\n3\n4\n5\n```\n### for\n`for`语句的格式为：\n```python\nfor x in val:\n    ...\n```\n\n注：`val`的类型必须是可遍历数据类型。\n\n这段代码的意思为：将`x`依次赋值为`val`的每一个元素，再执行下面的代码块。\n\n如：\n```python\nfor x in (1,2,3,4):\n    print(x)\n```\n这段代码中，`x`依次赋值为`1, 2, 3, 4`。\n\n#### range()函数\n这个函数能生成有序`tuple`。\n\n用法：`range(stop)`。  \n这个函数返回`(0, 1, 2,...,stop-1)`  \n用这个函数配合`for`使用更佳。  \n例：\n```python\nfor x in range(10):\n    print(x)\n```\n\n输出：\n\n```\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n```\n\n当然，这个函数还有`range(start,stop,step)`的用法，就不说了，相信各位应该可以翻文档看到用法的。\n\n> 懒就不要找借口\n\n住口，无耻老贼！\n\n### break&continue\n`break`语句：跳出循环。  \n`continue`语句：跳出本次循环。\n\n例：\n```python\nfor x in range(10):\n    if x == 5:\n        break\n    print(x)\n```\n\n输出：\n```\n0\n1\n2\n3\n4\n```\n\n例：\n```python\nfor x in range(10):\n    if x == 5:\n        continue\n    print(x)\n```\n\n输出：\n```\n0\n1\n2\n3\n4\n6\n7\n8\n9\n```\n\n## 函数\n\n### 函数是什么？\n\n> 函数（function）在数学中是两不为空集的集合间的一种对应关系：输入值集合中的每项元素皆能对应唯一一项输出值集合中的元素。  \n> 摘自[搜狗百科](https://baike.sogou.com/m/v76195.htm?fromTitle=函数&rcer=BdeCJMQP)\n\n这是数学的定义，不过大部分编程语言中的函数和这个定义的一点是差不多的。\n\n> 输入值集合中的每项元素皆能对应唯一一项输出值集合中的元素。\n\n编程语言里的函数差不多就是，给定一些参数，执行相应的代码或者返回一个确定的对象。\n\n还记得开头提到的```print()```函数吗？\n\n```python\nprint(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n```\n\n其中，括号里的东西就是传进去的*参数*。\n\n### 定义一个函数\n\nPython中，定义函数的方法如下：\n\n```python\ndef func(val1,val2,val3,...):\n    ...\n```\n\n其中，`func`为你的函数名。\n`val1`, `val2`, `val3`等等为你要传入的参数名。\n\n现在我们来定义一个函数吧。\n\n```python\ndef add1(num): #括号内为参数表\n    ans=num+1 #将ans赋值为num+1\n    return ans #将ans作为函数的返回值\n```\n\n`return`语句的意思为：调用这个函数，返回一个值，并且立即关闭这个函数。\n\n### 函数的调用\n\n我们来运行一下这个函数吧。\n\n```python\n>>> add1(3)\n4\n```\n\n可以看到，`add1(3)`这个语句就代表`4`。\n\n这样就成功调用了先前定义的函数。\n\n函数不仅能独立运行，还能参与运算，甚至可以作为其他函数的参数。\n\n```python\n>>> add1(3)+1\n5\n>>> add1(add(3))\n5\n```\n\n学废了吗？\n\n### 参数默认值\n\n定义函数时，参数表中的参数后加`=一个对象`时表示默认，即不传入该参数时的默认值。\n\n我们再来定义一个函数：\n\n```python:\ndef min1(num=1):\n    ans=num-1\n    return ans\n```\n调用一下\n\n```python\n>>> min1(1)\n0\n>>> min1()\n0\n```\n当不传入参数的时候，默认为`1`\n\n### 函数参数的传入\n\n之前提到的`print()`函数和自己定义的`add1()`函数，都是直接传入一个参数，这种当然是最简单的一种。下面介绍几种传参方式。\n\n1. 位置传参  \n按照参数表按次序传参，和前面一样，不赘述了。\n\n2. 关键字传参  \n什么意思？  \n假如有一个函数，定义为`def func(val1,val2)`  \n那么，`func(1,2)`就默认`val1`为`1`，`val2`为`2`。  \n如果这样传参：`func(val2=1,val1=2)`  \n那么，`val1`就是`2`，`val2`就是`1`。\n\n3. 表传参\n4. 字典传参\n\nhmmmmm，太复杂了，新手不需要这些……\n\n> 盲猜不会\n\n在？把监控拆了。\n\n","source":"_posts/Python学习随笔.md","raw":"---\ntitle: Python学习随笔\ndate: 2021-08-17 08:08:21\ntags: \n  - Python\n  - 学习\n  - 随笔\ncategories:\n  - Python随笔\n---\n# 开始使用Python!\n\nPython是一门上手容易的解释性语言，非常适合初学者使用。\n本篇博客以Python 3.9进行介绍。\n\n## 你好，世界！\n\n学一门语言，首先要知道他的输出语句\n\nPython的输出语句为`print()`  \n试着在Python终端里面输入`print('Hello world')`  \n输出：\n\n```\nHello world\n```\n\n很好，你已经编写了第一行Python语句！\n\n`print()`的标准格式为：\n\n```python\nprint(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n```\n\n但是初学者并不需要掌握那么多。  \n只需知道`print(对象)`就行了。\n\n## 帮助\n\n为了少走弯路，必须学会看文档。\n\n输入：\n```python\nhelp()\n```\n可以进入help命令行。\n\n输入：\n```python\nhelp(你想查询的对象)\n```\n可以获取该对象的帮助文档。\n\n## 变量\n\n### 啥是变量？\n\n简单来说，变量就是一个特殊的名字，里面存着一些对象，这些对象可以改变。\n\n### 变量怎么定义？\nPython的变量无需声明，直接拿来用就好了。\n\n什么意思？  \n> 举个例子，有一个人前来买瓜，他直接把老板捅了，这就叫不声明直接使用。  \n> 有一个人前来买瓜，他先和老板唠唠嗑，再把老板捅了，这就叫声明后使用。\n\n开个玩笑。\n\n像C语言，变量必须先`int val;`，然后再`val=114514;`，前面有一个声明的过程，相当于和计算机说一下“我有个变量要用”。  \n~~这个变量为什么这么臭啊~~\n\n而Python呢，直接`val=114514`，不需要和计算机说明“我有个变量要用”。  \n~~这变量太臭了不能要了~~\n\n> 所以你还是没说怎么变量怎么定义啊喂！\n\n上面的，别着急。\n\n变量的定义方式是`变量名=对象`。  \n例如：\n\n```python\na=1\nb=2\nsenpai=114514\nshout='哼哼哼啊啊啊啊啊啊啊啊啊啊啊'\n```\n\n~~好像混进了奇怪的东西~~\n\n注意：变量名只能以字母，汉字（这个看编码）或下划线开头，不可以和保留关键字相同，如果相同，保留关键字将会被替代\n\n> 保留关键字就是Python内部的一些类名、函数名等等，包括`int`, `float`等等\n\n### 变量能干嘛？\n\n变量可以参与运算，作为参数传入函数等等。\n\n在Python控制台输入以下代码：\n\n```python\na=114\nb=514\ns='哼哼哼啊啊啊啊啊啊啊啊啊啊啊'\n```\n\n再执行这行代码：\n\n```python\nprint(a)\nprint(b)\nprint(s)\n```\n\n输出：\n\n```\n114\n514\n哼哼哼啊啊啊啊啊啊啊啊啊啊啊\n```\n\n而不是：\n\n```\na\nb\ns\n```\n\n这样，a, b, s就变成参数传入print()函数里了，输出的是变量代表的对象，而不是变量名。\n\n输入：\n\n```python\nprint(a+b)\n```\n\n输出：\n\n```\n628\n```\n\n可以看到，变量参与了运算。\n\n### 改变变量的值（赋值）\n和定义变量差不多，直接`变量名=对象`就完事了。\n\n有几个特殊的赋值方法：`+=`, `-=`, `*=`, `/=`, `**=`, `//=`, `%=`，表示将前面和后面的对象先运算，再将结果赋值到前面的变量。  \n例如`a+=1`等价于`a=a+1`。\n\n## 一些数据类型\n\n### 简单介绍\n\n严格来说，Python里面的“数据类型”应该叫类，毕竟是面相对象嘛\n\n> 面相对象和类是啥？\n\n这个以后再说。\n\n```python\na='哼哼哼啊啊啊啊啊啊啊啊啊啊啊'\n#a是一个字符串(str)对象\nb=114514\n#b是一个整数(int)对象\nc=0.1919810\n#c是一个实数(float)对象\nd=[1,1,4,5,1,4]\n#d是一个列表(list)对象\ne=(1,9,1,9,8,1,0)\n#e是一个元组/定值表(tuple)对象\nf={'a':1,'b':2,'c':3}\n#f是一个字典(dictionary/dict)对象\ng=True\n#g是一个布尔(bool)对象\n```\n\n另外，用`type()`函数可以查看变量所属的数据类型（类）。  \n用法：\n\n```python\na=114514\ntype(a)\n```\n\n输出：\n\n```\nint\n```\n\n### list, tuple, str, dict\n\n#### list\n\nPython中的列表，一个列表可以存储一组对象，`list`由`[]`括起来。\n\n```\na=[1,2,3]\n```\n上述代码，定义了一个`list`，内容为`[1,2,3]`。\n\n可以通过`a[index]`来访问列表中的元素。  \n`index`为下标，下标从`0`开始，到`列表长度-1`结束。  \n如上述代码中，`a[0]`为`1`，`a[1]`为`2`，`a[2]`为`3`。  \n下标为负，表示从后往前数，比如`a[-1]`为最后一个元素，为`3`。\n\n#### tuple\n\n`tuple`意为“元组”或者“定值表”，相当于不能改变内容的`list`，元组用`()`括起来\n下标访问和`list`类似，就不重复了。\n\n例：\n\n```python\na=(1,2,3,4)\n```\n上述代码定义了一个`tuple`。\n\n#### str\n\n字符串，是一种特殊的`tuple`，用一对`'`或者`\"`括起来。\n\n例：\n\n```python\na='abcd'\nb=\"efg\"\n```\n\n#### dict\n\n意为“字典”，相当于能自定义下标类型的`list`。\n\n定义方法，例：\n\n```python\na={'test':1,'hmm':2}\n```\n\n其中：`test`和`hmm`为下标，可以用`a[index]`访问。  \n`1`和`2`为下标对应的值。\n\n如：`a['test']`即为`1`，`a['hmm']`即为`2`。\n\n## 一些常见的运算\n\nPython内置的运算符有`+`，`-`，`*`，`/`，`**`，`//`，`%`，`and`，`or`\n，`not`，`in`等等，我没有列举全。\n\n### 算术运算符\n\n#### +\n\n`+`，顾名思义，在`int`和`float`中和数学里的`+`是一样的\n\n例如：\n\n```python\n>>> 1+1\n2\n>>> 1.1+2.2\n3.3\n```\n\n在一些可遍历的数据类型，如`str`, `list`, `tuple`, `dict`中，`+`仅仅把两个对象合在一起。\n\n例如：\n\n```python\n>>> [1,2]+[3,4]\n[1, 2, 3, 4]\n\n>>> 'abc'+'def'\n'abcdef'\n\n>>> ('a','b')+('c','d')\n('a','b','c','d')\n```\n\n#### -\n\n`-`只支持`float`和`int`，和数学上的`-`类似。\n\n```python\n>>> 2-1\n1\n>>> 8.8-7.8\n1.0\n```\n\n#### *\n\n同`-`，和数学上的`*`类似。\n\n```python\n>>> 9*9\n81\n>>> 5*8\n40\n```\n\n#### /\n\n除法，返回`float`类型\n\n```python\n>>> 1/2\n0.5\n>>> 2/2\n1.0\n```\n\n#### **\n\n乘方，仅支持`int`和`float`类型\n\n```python\n>>> 9**2\n81\n```\n\n#### //\n\n整除，向下取整（去掉小数部分）\n\n```python\n>>> 2//3\n0\n>>> 2//2\n1\n```\n\n#### %\n\n模，取余数\n\n```python\n>>> 3%2\n1\n>>> 3%(-2)\n-1\n>>> (-3)%2\n1\n>>> (-3)%(-2)\n-1\n```\n\n### 逻辑运算符\n\n#### ==\n两个赋值号，为等于号。  \n如果两边的值一样，返回`True`，否则返回`False`。\n\n例：\n```python\n>>> 1 == 2\nFalse\n>>> 1 == 1\nTrue\n```\n\n#### !=\n这个符号为不等号，作用和等于号相反。\n\n例：\n```python\n>>> 1 != 2\nTrue\n>>> 1 != 1\nFalse\n```\n\n#### <, >, <=, >=\n小于号，大于号，小于等于号和大于等于号。  \n式子成立，返回`True`，反之返回`False`。\n\n例：\n```python\n>>> 1 < 2\nTrue\n>>> 1 > 2\nFalse\n>>> 1 <= 1\nTrue\n>>> 1 >= 1\nTrue\n```\n\n#### and, or\n字面意思，`and`为“与”，`or`为“或”。\n\n`and`和`or`都是双目运算符，即左右两边都有一个对象参与运算。\n\n例：\n```python\n>>> True and False\nFalse\n>>> True or False\nTrue\n```\n\n什么意思？当`and`两边都是非0值时，返回`True`，反之返回`False`。  \n当`or`两边都不是非0值时，返回`False`，反之返回`True`。\n\n#### not\n字面意思，“非”。\n\n`not`为单目运算符，只需要一个对象参与运算。\n\n例：\n```python\n>>> not True\nFalse\n>>> not False\nTrue\n```\n\n`not`返回他后面对象的相反值。\n\n#### in\n`in`意为“是否在……中”，是返回`True`，不是返回`False`。\n例：\n```python\n>>> 1 in (1,2)\nTrue\n>>> 1 in [3,4]\nFalse\n>>> 'a' in 'ab'\nTrue\n```\n注：后面那个对象只能是可遍历的数据类型。\n\n## 判断语句\n\nPython中的判断语句为`if`。\n\n`if`语句的格式：\n```python\nif val1:\n    ...\nelif val2:\n    ...\nelif val3:\n    ...\nelse:\n    ...\n```\n注：Python对缩进极为严格，缩进一定要是4个空格或者一个`Tab`！\n\n这段代码的意思是：  \n先看`if val1`，如果`val1`为非0值，那么执行`val1`下的语句块。  \n如果为0，那么再看`elif val2`……  \n如果上述`if`, `elif`都不执行的话，执行最后一个`else`下面的语句块。\n\n`val1`, `val2`等等都是一个`bool`值。如果不是，Python将自动转换。\n\n其中，`elif`, `else`都可以不出现，所以这段代码还有这样的写法：\n```python\nif val1:\n    ...\n```\n\n\n```python\nif val1:\n    ...\nelif val2:\n    ...\nelif val3:\n    ...\n```\n\n\n```python\nif val1:\n    ...\nelse:\n    ...\n```\n\n## 循环语句\n\nPython的循环语句主要有`while`, `for`两种形式。\n\n### while\n`while`语句的格式为：\n```python\nwhile val:\n    ...\n```\n\n这段代码的意思为：当`val`为非0值时，循环执行下面的代码，直到`val`为0时，跳出循环。\n\n例：\n```python\na=1\nwhile a<=5:\n    print(a)\n    a+=1\n```\n输出：\n```\n1\n2\n3\n4\n5\n```\n### for\n`for`语句的格式为：\n```python\nfor x in val:\n    ...\n```\n\n注：`val`的类型必须是可遍历数据类型。\n\n这段代码的意思为：将`x`依次赋值为`val`的每一个元素，再执行下面的代码块。\n\n如：\n```python\nfor x in (1,2,3,4):\n    print(x)\n```\n这段代码中，`x`依次赋值为`1, 2, 3, 4`。\n\n#### range()函数\n这个函数能生成有序`tuple`。\n\n用法：`range(stop)`。  \n这个函数返回`(0, 1, 2,...,stop-1)`  \n用这个函数配合`for`使用更佳。  \n例：\n```python\nfor x in range(10):\n    print(x)\n```\n\n输出：\n\n```\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n```\n\n当然，这个函数还有`range(start,stop,step)`的用法，就不说了，相信各位应该可以翻文档看到用法的。\n\n> 懒就不要找借口\n\n住口，无耻老贼！\n\n### break&continue\n`break`语句：跳出循环。  \n`continue`语句：跳出本次循环。\n\n例：\n```python\nfor x in range(10):\n    if x == 5:\n        break\n    print(x)\n```\n\n输出：\n```\n0\n1\n2\n3\n4\n```\n\n例：\n```python\nfor x in range(10):\n    if x == 5:\n        continue\n    print(x)\n```\n\n输出：\n```\n0\n1\n2\n3\n4\n6\n7\n8\n9\n```\n\n## 函数\n\n### 函数是什么？\n\n> 函数（function）在数学中是两不为空集的集合间的一种对应关系：输入值集合中的每项元素皆能对应唯一一项输出值集合中的元素。  \n> 摘自[搜狗百科](https://baike.sogou.com/m/v76195.htm?fromTitle=函数&rcer=BdeCJMQP)\n\n这是数学的定义，不过大部分编程语言中的函数和这个定义的一点是差不多的。\n\n> 输入值集合中的每项元素皆能对应唯一一项输出值集合中的元素。\n\n编程语言里的函数差不多就是，给定一些参数，执行相应的代码或者返回一个确定的对象。\n\n还记得开头提到的```print()```函数吗？\n\n```python\nprint(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n```\n\n其中，括号里的东西就是传进去的*参数*。\n\n### 定义一个函数\n\nPython中，定义函数的方法如下：\n\n```python\ndef func(val1,val2,val3,...):\n    ...\n```\n\n其中，`func`为你的函数名。\n`val1`, `val2`, `val3`等等为你要传入的参数名。\n\n现在我们来定义一个函数吧。\n\n```python\ndef add1(num): #括号内为参数表\n    ans=num+1 #将ans赋值为num+1\n    return ans #将ans作为函数的返回值\n```\n\n`return`语句的意思为：调用这个函数，返回一个值，并且立即关闭这个函数。\n\n### 函数的调用\n\n我们来运行一下这个函数吧。\n\n```python\n>>> add1(3)\n4\n```\n\n可以看到，`add1(3)`这个语句就代表`4`。\n\n这样就成功调用了先前定义的函数。\n\n函数不仅能独立运行，还能参与运算，甚至可以作为其他函数的参数。\n\n```python\n>>> add1(3)+1\n5\n>>> add1(add(3))\n5\n```\n\n学废了吗？\n\n### 参数默认值\n\n定义函数时，参数表中的参数后加`=一个对象`时表示默认，即不传入该参数时的默认值。\n\n我们再来定义一个函数：\n\n```python:\ndef min1(num=1):\n    ans=num-1\n    return ans\n```\n调用一下\n\n```python\n>>> min1(1)\n0\n>>> min1()\n0\n```\n当不传入参数的时候，默认为`1`\n\n### 函数参数的传入\n\n之前提到的`print()`函数和自己定义的`add1()`函数，都是直接传入一个参数，这种当然是最简单的一种。下面介绍几种传参方式。\n\n1. 位置传参  \n按照参数表按次序传参，和前面一样，不赘述了。\n\n2. 关键字传参  \n什么意思？  \n假如有一个函数，定义为`def func(val1,val2)`  \n那么，`func(1,2)`就默认`val1`为`1`，`val2`为`2`。  \n如果这样传参：`func(val2=1,val1=2)`  \n那么，`val1`就是`2`，`val2`就是`1`。\n\n3. 表传参\n4. 字典传参\n\nhmmmmm，太复杂了，新手不需要这些……\n\n> 盲猜不会\n\n在？把监控拆了。\n\n","slug":"Python学习随笔","published":1,"updated":"2021-08-17T14:00:03.949Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckshh03rs0001rns66a3s7896","content":"<h1 id=\"开始使用Python\"><a href=\"#开始使用Python\" class=\"headerlink\" title=\"开始使用Python!\"></a>开始使用Python!</h1><p>Python是一门上手容易的解释性语言，非常适合初学者使用。<br>本篇博客以Python 3.9进行介绍。</p>\n<h2 id=\"你好，世界！\"><a href=\"#你好，世界！\" class=\"headerlink\" title=\"你好，世界！\"></a>你好，世界！</h2><p>学一门语言，首先要知道他的输出语句</p>\n<p>Python的输出语句为<code>print()</code><br>试着在Python终端里面输入<code>print(&#39;Hello world&#39;)</code><br>输出：</p>\n<pre class=\"language-none\"><code class=\"language-none\">Hello world</code></pre>\n\n<p>很好，你已经编写了第一行Python语句！</p>\n<p><code>print()</code>的标准格式为：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> sep<span class=\"token operator\">=</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">file</span><span class=\"token operator\">=</span>sys<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">,</span> flush<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>但是初学者并不需要掌握那么多。<br>只需知道<code>print(对象)</code>就行了。</p>\n<h2 id=\"帮助\"><a href=\"#帮助\" class=\"headerlink\" title=\"帮助\"></a>帮助</h2><p>为了少走弯路，必须学会看文档。</p>\n<p>输入：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token builtin\">help</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n<p>可以进入help命令行。</p>\n<p>输入：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token builtin\">help</span><span class=\"token punctuation\">(</span>你想查询的对象<span class=\"token punctuation\">)</span></code></pre>\n<p>可以获取该对象的帮助文档。</p>\n<h2 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h2><h3 id=\"啥是变量？\"><a href=\"#啥是变量？\" class=\"headerlink\" title=\"啥是变量？\"></a>啥是变量？</h3><p>简单来说，变量就是一个特殊的名字，里面存着一些对象，这些对象可以改变。</p>\n<h3 id=\"变量怎么定义？\"><a href=\"#变量怎么定义？\" class=\"headerlink\" title=\"变量怎么定义？\"></a>变量怎么定义？</h3><p>Python的变量无需声明，直接拿来用就好了。</p>\n<p>什么意思？  </p>\n<blockquote>\n<p>举个例子，有一个人前来买瓜，他直接把老板捅了，这就叫不声明直接使用。<br>有一个人前来买瓜，他先和老板唠唠嗑，再把老板捅了，这就叫声明后使用。</p>\n</blockquote>\n<p>开个玩笑。</p>\n<p>像C语言，变量必须先<code>int val;</code>，然后再<code>val=114514;</code>，前面有一个声明的过程，相当于和计算机说一下“我有个变量要用”。<br><del>这个变量为什么这么臭啊</del></p>\n<p>而Python呢，直接<code>val=114514</code>，不需要和计算机说明“我有个变量要用”。<br><del>这变量太臭了不能要了</del></p>\n<blockquote>\n<p>所以你还是没说怎么变量怎么定义啊喂！</p>\n</blockquote>\n<p>上面的，别着急。</p>\n<p>变量的定义方式是<code>变量名=对象</code>。<br>例如：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a<span class=\"token operator\">=</span><span class=\"token number\">1</span>\nb<span class=\"token operator\">=</span><span class=\"token number\">2</span>\nsenpai<span class=\"token operator\">=</span><span class=\"token number\">114514</span>\nshout<span class=\"token operator\">=</span><span class=\"token string\">'哼哼哼啊啊啊啊啊啊啊啊啊啊啊'</span></code></pre>\n\n<p><del>好像混进了奇怪的东西</del></p>\n<p>注意：变量名只能以字母，汉字（这个看编码）或下划线开头，不可以和保留关键字相同，如果相同，保留关键字将会被替代</p>\n<blockquote>\n<p>保留关键字就是Python内部的一些类名、函数名等等，包括<code>int</code>, <code>float</code>等等</p>\n</blockquote>\n<h3 id=\"变量能干嘛？\"><a href=\"#变量能干嘛？\" class=\"headerlink\" title=\"变量能干嘛？\"></a>变量能干嘛？</h3><p>变量可以参与运算，作为参数传入函数等等。</p>\n<p>在Python控制台输入以下代码：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a<span class=\"token operator\">=</span><span class=\"token number\">114</span>\nb<span class=\"token operator\">=</span><span class=\"token number\">514</span>\ns<span class=\"token operator\">=</span><span class=\"token string\">'哼哼哼啊啊啊啊啊啊啊啊啊啊啊'</span></code></pre>\n\n<p>再执行这行代码：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></code></pre>\n\n<p>输出：</p>\n<pre class=\"language-none\"><code class=\"language-none\">114\n514\n哼哼哼啊啊啊啊啊啊啊啊啊啊啊</code></pre>\n\n<p>而不是：</p>\n<pre class=\"language-none\"><code class=\"language-none\">a\nb\ns</code></pre>\n\n<p>这样，a, b, s就变成参数传入print()函数里了，输出的是变量代表的对象，而不是变量名。</p>\n<p>输入：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">+</span>b<span class=\"token punctuation\">)</span></code></pre>\n\n<p>输出：</p>\n<pre class=\"language-none\"><code class=\"language-none\">628</code></pre>\n\n<p>可以看到，变量参与了运算。</p>\n<h3 id=\"改变变量的值（赋值）\"><a href=\"#改变变量的值（赋值）\" class=\"headerlink\" title=\"改变变量的值（赋值）\"></a>改变变量的值（赋值）</h3><p>和定义变量差不多，直接<code>变量名=对象</code>就完事了。</p>\n<p>有几个特殊的赋值方法：<code>+=</code>, <code>-=</code>, <code>*=</code>, <code>/=</code>, <code>**=</code>, <code>//=</code>, <code>%=</code>，表示将前面和后面的对象先运算，再将结果赋值到前面的变量。<br>例如<code>a+=1</code>等价于<code>a=a+1</code>。</p>\n<h2 id=\"一些数据类型\"><a href=\"#一些数据类型\" class=\"headerlink\" title=\"一些数据类型\"></a>一些数据类型</h2><h3 id=\"简单介绍\"><a href=\"#简单介绍\" class=\"headerlink\" title=\"简单介绍\"></a>简单介绍</h3><p>严格来说，Python里面的“数据类型”应该叫类，毕竟是面相对象嘛</p>\n<blockquote>\n<p>面相对象和类是啥？</p>\n</blockquote>\n<p>这个以后再说。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a<span class=\"token operator\">=</span><span class=\"token string\">'哼哼哼啊啊啊啊啊啊啊啊啊啊啊'</span>\n<span class=\"token comment\">#a是一个字符串(str)对象</span>\nb<span class=\"token operator\">=</span><span class=\"token number\">114514</span>\n<span class=\"token comment\">#b是一个整数(int)对象</span>\nc<span class=\"token operator\">=</span><span class=\"token number\">0.1919810</span>\n<span class=\"token comment\">#c是一个实数(float)对象</span>\nd<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#d是一个列表(list)对象</span>\ne<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#e是一个元组/定值表(tuple)对象</span>\nf<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">#f是一个字典(dictionary/dict)对象</span>\ng<span class=\"token operator\">=</span><span class=\"token boolean\">True</span>\n<span class=\"token comment\">#g是一个布尔(bool)对象</span></code></pre>\n\n<p>另外，用<code>type()</code>函数可以查看变量所属的数据类型（类）。<br>用法：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a<span class=\"token operator\">=</span><span class=\"token number\">114514</span>\n<span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></code></pre>\n\n<p>输出：</p>\n<pre class=\"language-none\"><code class=\"language-none\">int</code></pre>\n\n<h3 id=\"list-tuple-str-dict\"><a href=\"#list-tuple-str-dict\" class=\"headerlink\" title=\"list, tuple, str, dict\"></a>list, tuple, str, dict</h3><h4 id=\"list\"><a href=\"#list\" class=\"headerlink\" title=\"list\"></a>list</h4><p>Python中的列表，一个列表可以存储一组对象，<code>list</code>由<code>[]</code>括起来。</p>\n<pre class=\"language-none\"><code class=\"language-none\">a&#x3D;[1,2,3]</code></pre>\n<p>上述代码，定义了一个<code>list</code>，内容为<code>[1,2,3]</code>。</p>\n<p>可以通过<code>a[index]</code>来访问列表中的元素。<br><code>index</code>为下标，下标从<code>0</code>开始，到<code>列表长度-1</code>结束。<br>如上述代码中，<code>a[0]</code>为<code>1</code>，<code>a[1]</code>为<code>2</code>，<code>a[2]</code>为<code>3</code>。<br>下标为负，表示从后往前数，比如<code>a[-1]</code>为最后一个元素，为<code>3</code>。</p>\n<h4 id=\"tuple\"><a href=\"#tuple\" class=\"headerlink\" title=\"tuple\"></a>tuple</h4><p><code>tuple</code>意为“元组”或者“定值表”，相当于不能改变内容的<code>list</code>，元组用<code>()</code>括起来<br>下标访问和<code>list</code>类似，就不重复了。</p>\n<p>例：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></code></pre>\n<p>上述代码定义了一个<code>tuple</code>。</p>\n<h4 id=\"str\"><a href=\"#str\" class=\"headerlink\" title=\"str\"></a>str</h4><p>字符串，是一种特殊的<code>tuple</code>，用一对<code>&#39;</code>或者<code>&quot;</code>括起来。</p>\n<p>例：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a<span class=\"token operator\">=</span><span class=\"token string\">'abcd'</span>\nb<span class=\"token operator\">=</span><span class=\"token string\">\"efg\"</span></code></pre>\n\n<h4 id=\"dict\"><a href=\"#dict\" class=\"headerlink\" title=\"dict\"></a>dict</h4><p>意为“字典”，相当于能自定义下标类型的<code>list</code>。</p>\n<p>定义方法，例：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">'hmm'</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>其中：<code>test</code>和<code>hmm</code>为下标，可以用<code>a[index]</code>访问。<br><code>1</code>和<code>2</code>为下标对应的值。</p>\n<p>如：<code>a[&#39;test&#39;]</code>即为<code>1</code>，<code>a[&#39;hmm&#39;]</code>即为<code>2</code>。</p>\n<h2 id=\"一些常见的运算\"><a href=\"#一些常见的运算\" class=\"headerlink\" title=\"一些常见的运算\"></a>一些常见的运算</h2><p>Python内置的运算符有<code>+</code>，<code>-</code>，<code>*</code>，<code>/</code>，<code>**</code>，<code>//</code>，<code>%</code>，<code>and</code>，<code>or</code><br>，<code>not</code>，<code>in</code>等等，我没有列举全。</p>\n<h3 id=\"算术运算符\"><a href=\"#算术运算符\" class=\"headerlink\" title=\"算术运算符\"></a>算术运算符</h3><h4 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"+\"></a>+</h4><p><code>+</code>，顾名思义，在<code>int</code>和<code>float</code>中和数学里的<code>+</code>是一样的</p>\n<p>例如：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token operator\">+</span><span class=\"token number\">1</span>\n<span class=\"token number\">2</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">1.1</span><span class=\"token operator\">+</span><span class=\"token number\">2.2</span>\n<span class=\"token number\">3.3</span></code></pre>\n\n<p>在一些可遍历的数据类型，如<code>str</code>, <code>list</code>, <code>tuple</code>, <code>dict</code>中，<code>+</code>仅仅把两个对象合在一起。</p>\n<p>例如：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'abc'</span><span class=\"token operator\">+</span><span class=\"token string\">'def'</span>\n<span class=\"token string\">'abcdef'</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">)</span></code></pre>\n\n<h4 id=\"-1\"><a href=\"#-1\" class=\"headerlink\" title=\"-\"></a>-</h4><p><code>-</code>只支持<code>float</code>和<code>int</code>，和数学上的<code>-</code>类似。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">2</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>\n<span class=\"token number\">1</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">8.8</span><span class=\"token operator\">-</span><span class=\"token number\">7.8</span>\n<span class=\"token number\">1.0</span></code></pre>\n\n<h4 id=\"-2\"><a href=\"#-2\" class=\"headerlink\" title=\"*\"></a>*</h4><p>同<code>-</code>，和数学上的<code>*</code>类似。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">9</span><span class=\"token operator\">*</span><span class=\"token number\">9</span>\n<span class=\"token number\">81</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">5</span><span class=\"token operator\">*</span><span class=\"token number\">8</span>\n<span class=\"token number\">40</span></code></pre>\n\n<h4 id=\"-3\"><a href=\"#-3\" class=\"headerlink\" title=\"/\"></a>/</h4><p>除法，返回<code>float</code>类型</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">2</span>\n<span class=\"token number\">0.5</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">2</span><span class=\"token operator\">/</span><span class=\"token number\">2</span>\n<span class=\"token number\">1.0</span></code></pre>\n\n<h4 id=\"-4\"><a href=\"#-4\" class=\"headerlink\" title=\"**\"></a>**</h4><p>乘方，仅支持<code>int</code>和<code>float</code>类型</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">9</span><span class=\"token operator\">**</span><span class=\"token number\">2</span>\n<span class=\"token number\">81</span></code></pre>\n\n<h4 id=\"-5\"><a href=\"#-5\" class=\"headerlink\" title=\"//\"></a>//</h4><p>整除，向下取整（去掉小数部分）</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">2</span><span class=\"token operator\">//</span><span class=\"token number\">3</span>\n<span class=\"token number\">0</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">2</span><span class=\"token operator\">//</span><span class=\"token number\">2</span>\n<span class=\"token number\">1</span></code></pre>\n\n<h4 id=\"-6\"><a href=\"#-6\" class=\"headerlink\" title=\"%\"></a>%</h4><p>模，取余数</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">3</span><span class=\"token operator\">%</span><span class=\"token number\">2</span>\n<span class=\"token number\">1</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">3</span><span class=\"token operator\">%</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">-</span><span class=\"token number\">1</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">2</span>\n<span class=\"token number\">1</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">-</span><span class=\"token number\">1</span></code></pre>\n\n<h3 id=\"逻辑运算符\"><a href=\"#逻辑运算符\" class=\"headerlink\" title=\"逻辑运算符\"></a>逻辑运算符</h3><h4 id=\"-7\"><a href=\"#-7\" class=\"headerlink\" title=\"==\"></a>==</h4><p>两个赋值号，为等于号。<br>如果两边的值一样，返回<code>True</code>，否则返回<code>False</code>。</p>\n<p>例：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span>\n<span class=\"token boolean\">False</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span>\n<span class=\"token boolean\">True</span></code></pre>\n\n<h4 id=\"-8\"><a href=\"#-8\" class=\"headerlink\" title=\"!=\"></a>!=</h4><p>这个符号为不等号，作用和等于号相反。</p>\n<p>例：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">!=</span> <span class=\"token number\">2</span>\n<span class=\"token boolean\">True</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">!=</span> <span class=\"token number\">1</span>\n<span class=\"token boolean\">False</span></code></pre>\n\n<h4 id=\"lt-gt-lt-gt\"><a href=\"#lt-gt-lt-gt\" class=\"headerlink\" title=\"&lt;, &gt;, &lt;=, &gt;=\"></a>&lt;, &gt;, &lt;=, &gt;=</h4><p>小于号，大于号，小于等于号和大于等于号。<br>式子成立，返回<code>True</code>，反之返回<code>False</code>。</p>\n<p>例：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span>\n<span class=\"token boolean\">True</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">></span> <span class=\"token number\">2</span>\n<span class=\"token boolean\">False</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span>\n<span class=\"token boolean\">True</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">>=</span> <span class=\"token number\">1</span>\n<span class=\"token boolean\">True</span></code></pre>\n\n<h4 id=\"and-or\"><a href=\"#and-or\" class=\"headerlink\" title=\"and, or\"></a>and, or</h4><p>字面意思，<code>and</code>为“与”，<code>or</code>为“或”。</p>\n<p><code>and</code>和<code>or</code>都是双目运算符，即左右两边都有一个对象参与运算。</p>\n<p>例：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token boolean\">True</span> <span class=\"token keyword\">and</span> <span class=\"token boolean\">False</span>\n<span class=\"token boolean\">False</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token boolean\">True</span> <span class=\"token keyword\">or</span> <span class=\"token boolean\">False</span>\n<span class=\"token boolean\">True</span></code></pre>\n\n<p>什么意思？当<code>and</code>两边都是非0值时，返回<code>True</code>，反之返回<code>False</code>。<br>当<code>or</code>两边都不是非0值时，返回<code>False</code>，反之返回<code>True</code>。</p>\n<h4 id=\"not\"><a href=\"#not\" class=\"headerlink\" title=\"not\"></a>not</h4><p>字面意思，“非”。</p>\n<p><code>not</code>为单目运算符，只需要一个对象参与运算。</p>\n<p>例：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">True</span>\n<span class=\"token boolean\">False</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">False</span>\n<span class=\"token boolean\">True</span></code></pre>\n\n<p><code>not</code>返回他后面对象的相反值。</p>\n<h4 id=\"in\"><a href=\"#in\" class=\"headerlink\" title=\"in\"></a>in</h4><p><code>in</code>意为“是否在……中”，是返回<code>True</code>，不是返回<code>False</code>。<br>例：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token boolean\">True</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token boolean\">False</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'a'</span> <span class=\"token keyword\">in</span> <span class=\"token string\">'ab'</span>\n<span class=\"token boolean\">True</span></code></pre>\n<p>注：后面那个对象只能是可遍历的数据类型。</p>\n<h2 id=\"判断语句\"><a href=\"#判断语句\" class=\"headerlink\" title=\"判断语句\"></a>判断语句</h2><p>Python中的判断语句为<code>if</code>。</p>\n<p><code>if</code>语句的格式：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">if</span> val1<span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">elif</span> val2<span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">elif</span> val3<span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre>\n<p>注：Python对缩进极为严格，缩进一定要是4个空格或者一个<code>Tab</code>！</p>\n<p>这段代码的意思是：<br>先看<code>if val1</code>，如果<code>val1</code>为非0值，那么执行<code>val1</code>下的语句块。<br>如果为0，那么再看<code>elif val2</code>……<br>如果上述<code>if</code>, <code>elif</code>都不执行的话，执行最后一个<code>else</code>下面的语句块。</p>\n<p><code>val1</code>, <code>val2</code>等等都是一个<code>bool</code>值。如果不是，Python将自动转换。</p>\n<p>其中，<code>elif</code>, <code>else</code>都可以不出现，所以这段代码还有这样的写法：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">if</span> val1<span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre>\n\n\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">if</span> val1<span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">elif</span> val2<span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">elif</span> val3<span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre>\n\n\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">if</span> val1<span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre>\n\n<h2 id=\"循环语句\"><a href=\"#循环语句\" class=\"headerlink\" title=\"循环语句\"></a>循环语句</h2><p>Python的循环语句主要有<code>while</code>, <code>for</code>两种形式。</p>\n<h3 id=\"while\"><a href=\"#while\" class=\"headerlink\" title=\"while\"></a>while</h3><p><code>while</code>语句的格式为：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">while</span> val<span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre>\n\n<p>这段代码的意思为：当<code>val</code>为非0值时，循环执行下面的代码，直到<code>val</code>为0时，跳出循环。</p>\n<p>例：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a<span class=\"token operator\">=</span><span class=\"token number\">1</span>\n<span class=\"token keyword\">while</span> a<span class=\"token operator\">&lt;=</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n    a<span class=\"token operator\">+=</span><span class=\"token number\">1</span></code></pre>\n<p>输出：</p>\n<pre class=\"language-none\"><code class=\"language-none\">1\n2\n3\n4\n5</code></pre>\n<h3 id=\"for\"><a href=\"#for\" class=\"headerlink\" title=\"for\"></a>for</h3><p><code>for</code>语句的格式为：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> val<span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre>\n\n<p>注：<code>val</code>的类型必须是可遍历数据类型。</p>\n<p>这段代码的意思为：将<code>x</code>依次赋值为<code>val</code>的每一个元素，再执行下面的代码块。</p>\n<p>如：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></code></pre>\n<p>这段代码中，<code>x</code>依次赋值为<code>1, 2, 3, 4</code>。</p>\n<h4 id=\"range-函数\"><a href=\"#range-函数\" class=\"headerlink\" title=\"range()函数\"></a>range()函数</h4><p>这个函数能生成有序<code>tuple</code>。</p>\n<p>用法：<code>range(stop)</code>。<br>这个函数返回<code>(0, 1, 2,...,stop-1)</code><br>用这个函数配合<code>for</code>使用更佳。<br>例：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></code></pre>\n\n<p>输出：</p>\n<pre class=\"language-none\"><code class=\"language-none\">0\n1\n2\n3\n4\n5\n6\n7\n8\n9</code></pre>\n\n<p>当然，这个函数还有<code>range(start,stop,step)</code>的用法，就不说了，相信各位应该可以翻文档看到用法的。</p>\n<blockquote>\n<p>懒就不要找借口</p>\n</blockquote>\n<p>住口，无耻老贼！</p>\n<h3 id=\"break-amp-continue\"><a href=\"#break-amp-continue\" class=\"headerlink\" title=\"break&amp;continue\"></a>break&amp;continue</h3><p><code>break</code>语句：跳出循环。<br><code>continue</code>语句：跳出本次循环。</p>\n<p>例：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> x <span class=\"token operator\">==</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></code></pre>\n\n<p>输出：</p>\n<pre class=\"language-none\"><code class=\"language-none\">0\n1\n2\n3\n4</code></pre>\n\n<p>例：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> x <span class=\"token operator\">==</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">continue</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></code></pre>\n\n<p>输出：</p>\n<pre class=\"language-none\"><code class=\"language-none\">0\n1\n2\n3\n4\n6\n7\n8\n9</code></pre>\n\n<h2 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h2><h3 id=\"函数是什么？\"><a href=\"#函数是什么？\" class=\"headerlink\" title=\"函数是什么？\"></a>函数是什么？</h3><blockquote>\n<p>函数（function）在数学中是两不为空集的集合间的一种对应关系：输入值集合中的每项元素皆能对应唯一一项输出值集合中的元素。<br>摘自<a href=\"https://baike.sogou.com/m/v76195.htm?fromTitle=%E5%87%BD%E6%95%B0&rcer=BdeCJMQP\">搜狗百科</a></p>\n</blockquote>\n<p>这是数学的定义，不过大部分编程语言中的函数和这个定义的一点是差不多的。</p>\n<blockquote>\n<p>输入值集合中的每项元素皆能对应唯一一项输出值集合中的元素。</p>\n</blockquote>\n<p>编程语言里的函数差不多就是，给定一些参数，执行相应的代码或者返回一个确定的对象。</p>\n<p>还记得开头提到的<code>print()</code>函数吗？</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> sep<span class=\"token operator\">=</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">file</span><span class=\"token operator\">=</span>sys<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">,</span> flush<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>其中，括号里的东西就是传进去的<em>参数</em>。</p>\n<h3 id=\"定义一个函数\"><a href=\"#定义一个函数\" class=\"headerlink\" title=\"定义一个函数\"></a>定义一个函数</h3><p>Python中，定义函数的方法如下：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">func</span><span class=\"token punctuation\">(</span>val1<span class=\"token punctuation\">,</span>val2<span class=\"token punctuation\">,</span>val3<span class=\"token punctuation\">,</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre>\n\n<p>其中，<code>func</code>为你的函数名。<br><code>val1</code>, <code>val2</code>, <code>val3</code>等等为你要传入的参数名。</p>\n<p>现在我们来定义一个函数吧。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">add1</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#括号内为参数表</span>\n    ans<span class=\"token operator\">=</span>num<span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token comment\">#将ans赋值为num+1</span>\n    <span class=\"token keyword\">return</span> ans <span class=\"token comment\">#将ans作为函数的返回值</span></code></pre>\n\n<p><code>return</code>语句的意思为：调用这个函数，返回一个值，并且立即关闭这个函数。</p>\n<h3 id=\"函数的调用\"><a href=\"#函数的调用\" class=\"headerlink\" title=\"函数的调用\"></a>函数的调用</h3><p>我们来运行一下这个函数吧。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> add1<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">4</span></code></pre>\n\n<p>可以看到，<code>add1(3)</code>这个语句就代表<code>4</code>。</p>\n<p>这样就成功调用了先前定义的函数。</p>\n<p>函数不仅能独立运行，还能参与运算，甚至可以作为其他函数的参数。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> add1<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span>\n<span class=\"token number\">5</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> add1<span class=\"token punctuation\">(</span>add<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">5</span></code></pre>\n\n<p>学废了吗？</p>\n<h3 id=\"参数默认值\"><a href=\"#参数默认值\" class=\"headerlink\" title=\"参数默认值\"></a>参数默认值</h3><p>定义函数时，参数表中的参数后加<code>=一个对象</code>时表示默认，即不传入该参数时的默认值。</p>\n<p>我们再来定义一个函数：</p>\n<pre class=\"language-python:\" data-language=\"python:\"><code class=\"language-python:\">def min1(num&#x3D;1):\n    ans&#x3D;num-1\n    return ans</code></pre>\n<p>调用一下</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> min1<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">0</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> min1<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">0</span></code></pre>\n<p>当不传入参数的时候，默认为<code>1</code></p>\n<h3 id=\"函数参数的传入\"><a href=\"#函数参数的传入\" class=\"headerlink\" title=\"函数参数的传入\"></a>函数参数的传入</h3><p>之前提到的<code>print()</code>函数和自己定义的<code>add1()</code>函数，都是直接传入一个参数，这种当然是最简单的一种。下面介绍几种传参方式。</p>\n<ol>\n<li><p>位置传参<br>按照参数表按次序传参，和前面一样，不赘述了。</p>\n</li>\n<li><p>关键字传参<br>什么意思？<br>假如有一个函数，定义为<code>def func(val1,val2)</code><br>那么，<code>func(1,2)</code>就默认<code>val1</code>为<code>1</code>，<code>val2</code>为<code>2</code>。<br>如果这样传参：<code>func(val2=1,val1=2)</code><br>那么，<code>val1</code>就是<code>2</code>，<code>val2</code>就是<code>1</code>。</p>\n</li>\n<li><p>表传参</p>\n</li>\n<li><p>字典传参</p>\n</li>\n</ol>\n<p>hmmmmm，太复杂了，新手不需要这些……</p>\n<blockquote>\n<p>盲猜不会</p>\n</blockquote>\n<p>在？把监控拆了。</p>\n","site":{"data":{"yun":{"avatar":{"url":"/images/avatar.png","rounded":true,"opacity":1},"banner":{"enable":true,"title":"臭臭の小站","src":"/js/ui/banner.js","border":true,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"}},"social":[{"name":"GitHub","link":"https://github.com/ssmzhn","icon":"icon-github-line","color":"#6e5494"},{"name":"网易云音乐","link":"http://music.163.com/m/user/home?id=1790526375","icon":"icon-netease-cloud-music-line","color":"#C20C0C"},{"name":"知乎","link":"https://www.zhihu.com/people/she-sha-ming-zi-hao-ni/","icon":"icon-zhihu-line","color":"#0084FF"},{"name":"哔哩哔哩","link":"https://b23.tv/n2PyuM","icon":"icon-bilibili-line","color":"#FF8EB3"},{"name":"Twitter","link":"https://twitter.com/ssmzhn12138","icon":"icon-twitter-line","color":"#1da1f2"},{"name":"Telegram","link":"https://t.me/NameSetter","icon":"icon-telegram-line","color":"#0088CC"},{"name":"E-Mail","link":"mailto:ssmzhn@163.com","icon":"icon-mail-line","color":"#8E71C1"}],"reward":{"enable":false},"pages":[{"name":"小伙伴们","url":"/links","icon":"icon-genderless-line","color":"dodgerblue"}],"notice":{"enable":true,"content":"来了就看看再走吧！"},"comment":{"enable":true,"tips":["若您想及时得到回复提醒，建议跳转 GitHub Issues 评论。","若没有本文 Issue，您可以使用 Comment 模版新建。"],"candidates":["utterances"]},"utterances":{"enable":true,"repo":"ssmzhn/ssmzhn.github.io","issue-term":"pathname","theme":"github-light"},"footer":{"since":2021,"live_time":{"enable":true,"prefix":"这个博客爬了","suffix":"😅","start_time":"2021-08-15T17:23:40"}},"wordcloud":{"enable":true},"highlight":{"enable":false},"prismjs":{"enable":true,"preprocess":true,"line_number":false,"tab_replace":""},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}}}}},"excerpt":"","more":"<h1 id=\"开始使用Python\"><a href=\"#开始使用Python\" class=\"headerlink\" title=\"开始使用Python!\"></a>开始使用Python!</h1><p>Python是一门上手容易的解释性语言，非常适合初学者使用。<br>本篇博客以Python 3.9进行介绍。</p>\n<h2 id=\"你好，世界！\"><a href=\"#你好，世界！\" class=\"headerlink\" title=\"你好，世界！\"></a>你好，世界！</h2><p>学一门语言，首先要知道他的输出语句</p>\n<p>Python的输出语句为<code>print()</code><br>试着在Python终端里面输入<code>print(&#39;Hello world&#39;)</code><br>输出：</p>\n<pre class=\"language-none\"><code class=\"language-none\">Hello world</code></pre>\n\n<p>很好，你已经编写了第一行Python语句！</p>\n<p><code>print()</code>的标准格式为：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> sep<span class=\"token operator\">=</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">file</span><span class=\"token operator\">=</span>sys<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">,</span> flush<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>但是初学者并不需要掌握那么多。<br>只需知道<code>print(对象)</code>就行了。</p>\n<h2 id=\"帮助\"><a href=\"#帮助\" class=\"headerlink\" title=\"帮助\"></a>帮助</h2><p>为了少走弯路，必须学会看文档。</p>\n<p>输入：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token builtin\">help</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n<p>可以进入help命令行。</p>\n<p>输入：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token builtin\">help</span><span class=\"token punctuation\">(</span>你想查询的对象<span class=\"token punctuation\">)</span></code></pre>\n<p>可以获取该对象的帮助文档。</p>\n<h2 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h2><h3 id=\"啥是变量？\"><a href=\"#啥是变量？\" class=\"headerlink\" title=\"啥是变量？\"></a>啥是变量？</h3><p>简单来说，变量就是一个特殊的名字，里面存着一些对象，这些对象可以改变。</p>\n<h3 id=\"变量怎么定义？\"><a href=\"#变量怎么定义？\" class=\"headerlink\" title=\"变量怎么定义？\"></a>变量怎么定义？</h3><p>Python的变量无需声明，直接拿来用就好了。</p>\n<p>什么意思？  </p>\n<blockquote>\n<p>举个例子，有一个人前来买瓜，他直接把老板捅了，这就叫不声明直接使用。<br>有一个人前来买瓜，他先和老板唠唠嗑，再把老板捅了，这就叫声明后使用。</p>\n</blockquote>\n<p>开个玩笑。</p>\n<p>像C语言，变量必须先<code>int val;</code>，然后再<code>val=114514;</code>，前面有一个声明的过程，相当于和计算机说一下“我有个变量要用”。<br><del>这个变量为什么这么臭啊</del></p>\n<p>而Python呢，直接<code>val=114514</code>，不需要和计算机说明“我有个变量要用”。<br><del>这变量太臭了不能要了</del></p>\n<blockquote>\n<p>所以你还是没说怎么变量怎么定义啊喂！</p>\n</blockquote>\n<p>上面的，别着急。</p>\n<p>变量的定义方式是<code>变量名=对象</code>。<br>例如：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a<span class=\"token operator\">=</span><span class=\"token number\">1</span>\nb<span class=\"token operator\">=</span><span class=\"token number\">2</span>\nsenpai<span class=\"token operator\">=</span><span class=\"token number\">114514</span>\nshout<span class=\"token operator\">=</span><span class=\"token string\">'哼哼哼啊啊啊啊啊啊啊啊啊啊啊'</span></code></pre>\n\n<p><del>好像混进了奇怪的东西</del></p>\n<p>注意：变量名只能以字母，汉字（这个看编码）或下划线开头，不可以和保留关键字相同，如果相同，保留关键字将会被替代</p>\n<blockquote>\n<p>保留关键字就是Python内部的一些类名、函数名等等，包括<code>int</code>, <code>float</code>等等</p>\n</blockquote>\n<h3 id=\"变量能干嘛？\"><a href=\"#变量能干嘛？\" class=\"headerlink\" title=\"变量能干嘛？\"></a>变量能干嘛？</h3><p>变量可以参与运算，作为参数传入函数等等。</p>\n<p>在Python控制台输入以下代码：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a<span class=\"token operator\">=</span><span class=\"token number\">114</span>\nb<span class=\"token operator\">=</span><span class=\"token number\">514</span>\ns<span class=\"token operator\">=</span><span class=\"token string\">'哼哼哼啊啊啊啊啊啊啊啊啊啊啊'</span></code></pre>\n\n<p>再执行这行代码：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></code></pre>\n\n<p>输出：</p>\n<pre class=\"language-none\"><code class=\"language-none\">114\n514\n哼哼哼啊啊啊啊啊啊啊啊啊啊啊</code></pre>\n\n<p>而不是：</p>\n<pre class=\"language-none\"><code class=\"language-none\">a\nb\ns</code></pre>\n\n<p>这样，a, b, s就变成参数传入print()函数里了，输出的是变量代表的对象，而不是变量名。</p>\n<p>输入：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">+</span>b<span class=\"token punctuation\">)</span></code></pre>\n\n<p>输出：</p>\n<pre class=\"language-none\"><code class=\"language-none\">628</code></pre>\n\n<p>可以看到，变量参与了运算。</p>\n<h3 id=\"改变变量的值（赋值）\"><a href=\"#改变变量的值（赋值）\" class=\"headerlink\" title=\"改变变量的值（赋值）\"></a>改变变量的值（赋值）</h3><p>和定义变量差不多，直接<code>变量名=对象</code>就完事了。</p>\n<p>有几个特殊的赋值方法：<code>+=</code>, <code>-=</code>, <code>*=</code>, <code>/=</code>, <code>**=</code>, <code>//=</code>, <code>%=</code>，表示将前面和后面的对象先运算，再将结果赋值到前面的变量。<br>例如<code>a+=1</code>等价于<code>a=a+1</code>。</p>\n<h2 id=\"一些数据类型\"><a href=\"#一些数据类型\" class=\"headerlink\" title=\"一些数据类型\"></a>一些数据类型</h2><h3 id=\"简单介绍\"><a href=\"#简单介绍\" class=\"headerlink\" title=\"简单介绍\"></a>简单介绍</h3><p>严格来说，Python里面的“数据类型”应该叫类，毕竟是面相对象嘛</p>\n<blockquote>\n<p>面相对象和类是啥？</p>\n</blockquote>\n<p>这个以后再说。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a<span class=\"token operator\">=</span><span class=\"token string\">'哼哼哼啊啊啊啊啊啊啊啊啊啊啊'</span>\n<span class=\"token comment\">#a是一个字符串(str)对象</span>\nb<span class=\"token operator\">=</span><span class=\"token number\">114514</span>\n<span class=\"token comment\">#b是一个整数(int)对象</span>\nc<span class=\"token operator\">=</span><span class=\"token number\">0.1919810</span>\n<span class=\"token comment\">#c是一个实数(float)对象</span>\nd<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#d是一个列表(list)对象</span>\ne<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#e是一个元组/定值表(tuple)对象</span>\nf<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">#f是一个字典(dictionary/dict)对象</span>\ng<span class=\"token operator\">=</span><span class=\"token boolean\">True</span>\n<span class=\"token comment\">#g是一个布尔(bool)对象</span></code></pre>\n\n<p>另外，用<code>type()</code>函数可以查看变量所属的数据类型（类）。<br>用法：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a<span class=\"token operator\">=</span><span class=\"token number\">114514</span>\n<span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></code></pre>\n\n<p>输出：</p>\n<pre class=\"language-none\"><code class=\"language-none\">int</code></pre>\n\n<h3 id=\"list-tuple-str-dict\"><a href=\"#list-tuple-str-dict\" class=\"headerlink\" title=\"list, tuple, str, dict\"></a>list, tuple, str, dict</h3><h4 id=\"list\"><a href=\"#list\" class=\"headerlink\" title=\"list\"></a>list</h4><p>Python中的列表，一个列表可以存储一组对象，<code>list</code>由<code>[]</code>括起来。</p>\n<pre class=\"language-none\"><code class=\"language-none\">a&#x3D;[1,2,3]</code></pre>\n<p>上述代码，定义了一个<code>list</code>，内容为<code>[1,2,3]</code>。</p>\n<p>可以通过<code>a[index]</code>来访问列表中的元素。<br><code>index</code>为下标，下标从<code>0</code>开始，到<code>列表长度-1</code>结束。<br>如上述代码中，<code>a[0]</code>为<code>1</code>，<code>a[1]</code>为<code>2</code>，<code>a[2]</code>为<code>3</code>。<br>下标为负，表示从后往前数，比如<code>a[-1]</code>为最后一个元素，为<code>3</code>。</p>\n<h4 id=\"tuple\"><a href=\"#tuple\" class=\"headerlink\" title=\"tuple\"></a>tuple</h4><p><code>tuple</code>意为“元组”或者“定值表”，相当于不能改变内容的<code>list</code>，元组用<code>()</code>括起来<br>下标访问和<code>list</code>类似，就不重复了。</p>\n<p>例：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></code></pre>\n<p>上述代码定义了一个<code>tuple</code>。</p>\n<h4 id=\"str\"><a href=\"#str\" class=\"headerlink\" title=\"str\"></a>str</h4><p>字符串，是一种特殊的<code>tuple</code>，用一对<code>&#39;</code>或者<code>&quot;</code>括起来。</p>\n<p>例：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a<span class=\"token operator\">=</span><span class=\"token string\">'abcd'</span>\nb<span class=\"token operator\">=</span><span class=\"token string\">\"efg\"</span></code></pre>\n\n<h4 id=\"dict\"><a href=\"#dict\" class=\"headerlink\" title=\"dict\"></a>dict</h4><p>意为“字典”，相当于能自定义下标类型的<code>list</code>。</p>\n<p>定义方法，例：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">'hmm'</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>其中：<code>test</code>和<code>hmm</code>为下标，可以用<code>a[index]</code>访问。<br><code>1</code>和<code>2</code>为下标对应的值。</p>\n<p>如：<code>a[&#39;test&#39;]</code>即为<code>1</code>，<code>a[&#39;hmm&#39;]</code>即为<code>2</code>。</p>\n<h2 id=\"一些常见的运算\"><a href=\"#一些常见的运算\" class=\"headerlink\" title=\"一些常见的运算\"></a>一些常见的运算</h2><p>Python内置的运算符有<code>+</code>，<code>-</code>，<code>*</code>，<code>/</code>，<code>**</code>，<code>//</code>，<code>%</code>，<code>and</code>，<code>or</code><br>，<code>not</code>，<code>in</code>等等，我没有列举全。</p>\n<h3 id=\"算术运算符\"><a href=\"#算术运算符\" class=\"headerlink\" title=\"算术运算符\"></a>算术运算符</h3><h4 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"+\"></a>+</h4><p><code>+</code>，顾名思义，在<code>int</code>和<code>float</code>中和数学里的<code>+</code>是一样的</p>\n<p>例如：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token operator\">+</span><span class=\"token number\">1</span>\n<span class=\"token number\">2</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">1.1</span><span class=\"token operator\">+</span><span class=\"token number\">2.2</span>\n<span class=\"token number\">3.3</span></code></pre>\n\n<p>在一些可遍历的数据类型，如<code>str</code>, <code>list</code>, <code>tuple</code>, <code>dict</code>中，<code>+</code>仅仅把两个对象合在一起。</p>\n<p>例如：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'abc'</span><span class=\"token operator\">+</span><span class=\"token string\">'def'</span>\n<span class=\"token string\">'abcdef'</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">)</span></code></pre>\n\n<h4 id=\"-1\"><a href=\"#-1\" class=\"headerlink\" title=\"-\"></a>-</h4><p><code>-</code>只支持<code>float</code>和<code>int</code>，和数学上的<code>-</code>类似。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">2</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>\n<span class=\"token number\">1</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">8.8</span><span class=\"token operator\">-</span><span class=\"token number\">7.8</span>\n<span class=\"token number\">1.0</span></code></pre>\n\n<h4 id=\"-2\"><a href=\"#-2\" class=\"headerlink\" title=\"*\"></a>*</h4><p>同<code>-</code>，和数学上的<code>*</code>类似。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">9</span><span class=\"token operator\">*</span><span class=\"token number\">9</span>\n<span class=\"token number\">81</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">5</span><span class=\"token operator\">*</span><span class=\"token number\">8</span>\n<span class=\"token number\">40</span></code></pre>\n\n<h4 id=\"-3\"><a href=\"#-3\" class=\"headerlink\" title=\"/\"></a>/</h4><p>除法，返回<code>float</code>类型</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">2</span>\n<span class=\"token number\">0.5</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">2</span><span class=\"token operator\">/</span><span class=\"token number\">2</span>\n<span class=\"token number\">1.0</span></code></pre>\n\n<h4 id=\"-4\"><a href=\"#-4\" class=\"headerlink\" title=\"**\"></a>**</h4><p>乘方，仅支持<code>int</code>和<code>float</code>类型</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">9</span><span class=\"token operator\">**</span><span class=\"token number\">2</span>\n<span class=\"token number\">81</span></code></pre>\n\n<h4 id=\"-5\"><a href=\"#-5\" class=\"headerlink\" title=\"//\"></a>//</h4><p>整除，向下取整（去掉小数部分）</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">2</span><span class=\"token operator\">//</span><span class=\"token number\">3</span>\n<span class=\"token number\">0</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">2</span><span class=\"token operator\">//</span><span class=\"token number\">2</span>\n<span class=\"token number\">1</span></code></pre>\n\n<h4 id=\"-6\"><a href=\"#-6\" class=\"headerlink\" title=\"%\"></a>%</h4><p>模，取余数</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">3</span><span class=\"token operator\">%</span><span class=\"token number\">2</span>\n<span class=\"token number\">1</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">3</span><span class=\"token operator\">%</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">-</span><span class=\"token number\">1</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">2</span>\n<span class=\"token number\">1</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">-</span><span class=\"token number\">1</span></code></pre>\n\n<h3 id=\"逻辑运算符\"><a href=\"#逻辑运算符\" class=\"headerlink\" title=\"逻辑运算符\"></a>逻辑运算符</h3><h4 id=\"-7\"><a href=\"#-7\" class=\"headerlink\" title=\"==\"></a>==</h4><p>两个赋值号，为等于号。<br>如果两边的值一样，返回<code>True</code>，否则返回<code>False</code>。</p>\n<p>例：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span>\n<span class=\"token boolean\">False</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span>\n<span class=\"token boolean\">True</span></code></pre>\n\n<h4 id=\"-8\"><a href=\"#-8\" class=\"headerlink\" title=\"!=\"></a>!=</h4><p>这个符号为不等号，作用和等于号相反。</p>\n<p>例：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">!=</span> <span class=\"token number\">2</span>\n<span class=\"token boolean\">True</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">!=</span> <span class=\"token number\">1</span>\n<span class=\"token boolean\">False</span></code></pre>\n\n<h4 id=\"lt-gt-lt-gt\"><a href=\"#lt-gt-lt-gt\" class=\"headerlink\" title=\"&lt;, &gt;, &lt;=, &gt;=\"></a>&lt;, &gt;, &lt;=, &gt;=</h4><p>小于号，大于号，小于等于号和大于等于号。<br>式子成立，返回<code>True</code>，反之返回<code>False</code>。</p>\n<p>例：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span>\n<span class=\"token boolean\">True</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">></span> <span class=\"token number\">2</span>\n<span class=\"token boolean\">False</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span>\n<span class=\"token boolean\">True</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">>=</span> <span class=\"token number\">1</span>\n<span class=\"token boolean\">True</span></code></pre>\n\n<h4 id=\"and-or\"><a href=\"#and-or\" class=\"headerlink\" title=\"and, or\"></a>and, or</h4><p>字面意思，<code>and</code>为“与”，<code>or</code>为“或”。</p>\n<p><code>and</code>和<code>or</code>都是双目运算符，即左右两边都有一个对象参与运算。</p>\n<p>例：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token boolean\">True</span> <span class=\"token keyword\">and</span> <span class=\"token boolean\">False</span>\n<span class=\"token boolean\">False</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token boolean\">True</span> <span class=\"token keyword\">or</span> <span class=\"token boolean\">False</span>\n<span class=\"token boolean\">True</span></code></pre>\n\n<p>什么意思？当<code>and</code>两边都是非0值时，返回<code>True</code>，反之返回<code>False</code>。<br>当<code>or</code>两边都不是非0值时，返回<code>False</code>，反之返回<code>True</code>。</p>\n<h4 id=\"not\"><a href=\"#not\" class=\"headerlink\" title=\"not\"></a>not</h4><p>字面意思，“非”。</p>\n<p><code>not</code>为单目运算符，只需要一个对象参与运算。</p>\n<p>例：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">True</span>\n<span class=\"token boolean\">False</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">False</span>\n<span class=\"token boolean\">True</span></code></pre>\n\n<p><code>not</code>返回他后面对象的相反值。</p>\n<h4 id=\"in\"><a href=\"#in\" class=\"headerlink\" title=\"in\"></a>in</h4><p><code>in</code>意为“是否在……中”，是返回<code>True</code>，不是返回<code>False</code>。<br>例：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token boolean\">True</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token boolean\">False</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'a'</span> <span class=\"token keyword\">in</span> <span class=\"token string\">'ab'</span>\n<span class=\"token boolean\">True</span></code></pre>\n<p>注：后面那个对象只能是可遍历的数据类型。</p>\n<h2 id=\"判断语句\"><a href=\"#判断语句\" class=\"headerlink\" title=\"判断语句\"></a>判断语句</h2><p>Python中的判断语句为<code>if</code>。</p>\n<p><code>if</code>语句的格式：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">if</span> val1<span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">elif</span> val2<span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">elif</span> val3<span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre>\n<p>注：Python对缩进极为严格，缩进一定要是4个空格或者一个<code>Tab</code>！</p>\n<p>这段代码的意思是：<br>先看<code>if val1</code>，如果<code>val1</code>为非0值，那么执行<code>val1</code>下的语句块。<br>如果为0，那么再看<code>elif val2</code>……<br>如果上述<code>if</code>, <code>elif</code>都不执行的话，执行最后一个<code>else</code>下面的语句块。</p>\n<p><code>val1</code>, <code>val2</code>等等都是一个<code>bool</code>值。如果不是，Python将自动转换。</p>\n<p>其中，<code>elif</code>, <code>else</code>都可以不出现，所以这段代码还有这样的写法：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">if</span> val1<span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre>\n\n\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">if</span> val1<span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">elif</span> val2<span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">elif</span> val3<span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre>\n\n\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">if</span> val1<span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre>\n\n<h2 id=\"循环语句\"><a href=\"#循环语句\" class=\"headerlink\" title=\"循环语句\"></a>循环语句</h2><p>Python的循环语句主要有<code>while</code>, <code>for</code>两种形式。</p>\n<h3 id=\"while\"><a href=\"#while\" class=\"headerlink\" title=\"while\"></a>while</h3><p><code>while</code>语句的格式为：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">while</span> val<span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre>\n\n<p>这段代码的意思为：当<code>val</code>为非0值时，循环执行下面的代码，直到<code>val</code>为0时，跳出循环。</p>\n<p>例：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a<span class=\"token operator\">=</span><span class=\"token number\">1</span>\n<span class=\"token keyword\">while</span> a<span class=\"token operator\">&lt;=</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n    a<span class=\"token operator\">+=</span><span class=\"token number\">1</span></code></pre>\n<p>输出：</p>\n<pre class=\"language-none\"><code class=\"language-none\">1\n2\n3\n4\n5</code></pre>\n<h3 id=\"for\"><a href=\"#for\" class=\"headerlink\" title=\"for\"></a>for</h3><p><code>for</code>语句的格式为：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> val<span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre>\n\n<p>注：<code>val</code>的类型必须是可遍历数据类型。</p>\n<p>这段代码的意思为：将<code>x</code>依次赋值为<code>val</code>的每一个元素，再执行下面的代码块。</p>\n<p>如：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></code></pre>\n<p>这段代码中，<code>x</code>依次赋值为<code>1, 2, 3, 4</code>。</p>\n<h4 id=\"range-函数\"><a href=\"#range-函数\" class=\"headerlink\" title=\"range()函数\"></a>range()函数</h4><p>这个函数能生成有序<code>tuple</code>。</p>\n<p>用法：<code>range(stop)</code>。<br>这个函数返回<code>(0, 1, 2,...,stop-1)</code><br>用这个函数配合<code>for</code>使用更佳。<br>例：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></code></pre>\n\n<p>输出：</p>\n<pre class=\"language-none\"><code class=\"language-none\">0\n1\n2\n3\n4\n5\n6\n7\n8\n9</code></pre>\n\n<p>当然，这个函数还有<code>range(start,stop,step)</code>的用法，就不说了，相信各位应该可以翻文档看到用法的。</p>\n<blockquote>\n<p>懒就不要找借口</p>\n</blockquote>\n<p>住口，无耻老贼！</p>\n<h3 id=\"break-amp-continue\"><a href=\"#break-amp-continue\" class=\"headerlink\" title=\"break&amp;continue\"></a>break&amp;continue</h3><p><code>break</code>语句：跳出循环。<br><code>continue</code>语句：跳出本次循环。</p>\n<p>例：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> x <span class=\"token operator\">==</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></code></pre>\n\n<p>输出：</p>\n<pre class=\"language-none\"><code class=\"language-none\">0\n1\n2\n3\n4</code></pre>\n\n<p>例：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> x <span class=\"token operator\">==</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">continue</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></code></pre>\n\n<p>输出：</p>\n<pre class=\"language-none\"><code class=\"language-none\">0\n1\n2\n3\n4\n6\n7\n8\n9</code></pre>\n\n<h2 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h2><h3 id=\"函数是什么？\"><a href=\"#函数是什么？\" class=\"headerlink\" title=\"函数是什么？\"></a>函数是什么？</h3><blockquote>\n<p>函数（function）在数学中是两不为空集的集合间的一种对应关系：输入值集合中的每项元素皆能对应唯一一项输出值集合中的元素。<br>摘自<a href=\"https://baike.sogou.com/m/v76195.htm?fromTitle=%E5%87%BD%E6%95%B0&rcer=BdeCJMQP\">搜狗百科</a></p>\n</blockquote>\n<p>这是数学的定义，不过大部分编程语言中的函数和这个定义的一点是差不多的。</p>\n<blockquote>\n<p>输入值集合中的每项元素皆能对应唯一一项输出值集合中的元素。</p>\n</blockquote>\n<p>编程语言里的函数差不多就是，给定一些参数，执行相应的代码或者返回一个确定的对象。</p>\n<p>还记得开头提到的<code>print()</code>函数吗？</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> sep<span class=\"token operator\">=</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">file</span><span class=\"token operator\">=</span>sys<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">,</span> flush<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>其中，括号里的东西就是传进去的<em>参数</em>。</p>\n<h3 id=\"定义一个函数\"><a href=\"#定义一个函数\" class=\"headerlink\" title=\"定义一个函数\"></a>定义一个函数</h3><p>Python中，定义函数的方法如下：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">func</span><span class=\"token punctuation\">(</span>val1<span class=\"token punctuation\">,</span>val2<span class=\"token punctuation\">,</span>val3<span class=\"token punctuation\">,</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre>\n\n<p>其中，<code>func</code>为你的函数名。<br><code>val1</code>, <code>val2</code>, <code>val3</code>等等为你要传入的参数名。</p>\n<p>现在我们来定义一个函数吧。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">add1</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#括号内为参数表</span>\n    ans<span class=\"token operator\">=</span>num<span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token comment\">#将ans赋值为num+1</span>\n    <span class=\"token keyword\">return</span> ans <span class=\"token comment\">#将ans作为函数的返回值</span></code></pre>\n\n<p><code>return</code>语句的意思为：调用这个函数，返回一个值，并且立即关闭这个函数。</p>\n<h3 id=\"函数的调用\"><a href=\"#函数的调用\" class=\"headerlink\" title=\"函数的调用\"></a>函数的调用</h3><p>我们来运行一下这个函数吧。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> add1<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">4</span></code></pre>\n\n<p>可以看到，<code>add1(3)</code>这个语句就代表<code>4</code>。</p>\n<p>这样就成功调用了先前定义的函数。</p>\n<p>函数不仅能独立运行，还能参与运算，甚至可以作为其他函数的参数。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> add1<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span>\n<span class=\"token number\">5</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> add1<span class=\"token punctuation\">(</span>add<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">5</span></code></pre>\n\n<p>学废了吗？</p>\n<h3 id=\"参数默认值\"><a href=\"#参数默认值\" class=\"headerlink\" title=\"参数默认值\"></a>参数默认值</h3><p>定义函数时，参数表中的参数后加<code>=一个对象</code>时表示默认，即不传入该参数时的默认值。</p>\n<p>我们再来定义一个函数：</p>\n<pre class=\"language-python:\" data-language=\"python:\"><code class=\"language-python:\">def min1(num&#x3D;1):\n    ans&#x3D;num-1\n    return ans</code></pre>\n<p>调用一下</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> min1<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">0</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> min1<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">0</span></code></pre>\n<p>当不传入参数的时候，默认为<code>1</code></p>\n<h3 id=\"函数参数的传入\"><a href=\"#函数参数的传入\" class=\"headerlink\" title=\"函数参数的传入\"></a>函数参数的传入</h3><p>之前提到的<code>print()</code>函数和自己定义的<code>add1()</code>函数，都是直接传入一个参数，这种当然是最简单的一种。下面介绍几种传参方式。</p>\n<ol>\n<li><p>位置传参<br>按照参数表按次序传参，和前面一样，不赘述了。</p>\n</li>\n<li><p>关键字传参<br>什么意思？<br>假如有一个函数，定义为<code>def func(val1,val2)</code><br>那么，<code>func(1,2)</code>就默认<code>val1</code>为<code>1</code>，<code>val2</code>为<code>2</code>。<br>如果这样传参：<code>func(val2=1,val1=2)</code><br>那么，<code>val1</code>就是<code>2</code>，<code>val2</code>就是<code>1</code>。</p>\n</li>\n<li><p>表传参</p>\n</li>\n<li><p>字典传参</p>\n</li>\n</ol>\n<p>hmmmmm，太复杂了，新手不需要这些……</p>\n<blockquote>\n<p>盲猜不会</p>\n</blockquote>\n<p>在？把监控拆了。</p>\n"},{"title":"A test blog","date":"2021-08-15T14:05:16.000Z","_content":"# 一个奇怪的一级标题\n## 一个奇怪的二级标题\n### 一个奇怪的三级标题\n\n好了不开玩笑了  \n这是本人的第一个博客（有点小激动） \n欢迎前来捧场（啪叽啪叽）  \n","source":"_posts/blog.md","raw":"---\ntitle: A test blog\ndate: 2021-08-15 22:05:16\ntags:\n  - test\n  - 测试\n---\n# 一个奇怪的一级标题\n## 一个奇怪的二级标题\n### 一个奇怪的三级标题\n\n好了不开玩笑了  \n这是本人的第一个博客（有点小激动） \n欢迎前来捧场（啪叽啪叽）  \n","slug":"blog","published":1,"updated":"2021-08-16T13:00:44.128Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckshh03t80003rns6cqwi8w1q","content":"<h1 id=\"一个奇怪的一级标题\"><a href=\"#一个奇怪的一级标题\" class=\"headerlink\" title=\"一个奇怪的一级标题\"></a>一个奇怪的一级标题</h1><h2 id=\"一个奇怪的二级标题\"><a href=\"#一个奇怪的二级标题\" class=\"headerlink\" title=\"一个奇怪的二级标题\"></a>一个奇怪的二级标题</h2><h3 id=\"一个奇怪的三级标题\"><a href=\"#一个奇怪的三级标题\" class=\"headerlink\" title=\"一个奇怪的三级标题\"></a>一个奇怪的三级标题</h3><p>好了不开玩笑了<br>这是本人的第一个博客（有点小激动）<br>欢迎前来捧场（啪叽啪叽）  </p>\n","site":{"data":{"yun":{"avatar":{"url":"/images/avatar.png","rounded":true,"opacity":1},"banner":{"enable":true,"title":"臭臭の小站","src":"/js/ui/banner.js","border":true,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"}},"social":[{"name":"GitHub","link":"https://github.com/ssmzhn","icon":"icon-github-line","color":"#6e5494"},{"name":"网易云音乐","link":"http://music.163.com/m/user/home?id=1790526375","icon":"icon-netease-cloud-music-line","color":"#C20C0C"},{"name":"知乎","link":"https://www.zhihu.com/people/she-sha-ming-zi-hao-ni/","icon":"icon-zhihu-line","color":"#0084FF"},{"name":"哔哩哔哩","link":"https://b23.tv/n2PyuM","icon":"icon-bilibili-line","color":"#FF8EB3"},{"name":"Twitter","link":"https://twitter.com/ssmzhn12138","icon":"icon-twitter-line","color":"#1da1f2"},{"name":"Telegram","link":"https://t.me/NameSetter","icon":"icon-telegram-line","color":"#0088CC"},{"name":"E-Mail","link":"mailto:ssmzhn@163.com","icon":"icon-mail-line","color":"#8E71C1"}],"reward":{"enable":false},"pages":[{"name":"小伙伴们","url":"/links","icon":"icon-genderless-line","color":"dodgerblue"}],"notice":{"enable":true,"content":"来了就看看再走吧！"},"comment":{"enable":true,"tips":["若您想及时得到回复提醒，建议跳转 GitHub Issues 评论。","若没有本文 Issue，您可以使用 Comment 模版新建。"],"candidates":["utterances"]},"utterances":{"enable":true,"repo":"ssmzhn/ssmzhn.github.io","issue-term":"pathname","theme":"github-light"},"footer":{"since":2021,"live_time":{"enable":true,"prefix":"这个博客爬了","suffix":"😅","start_time":"2021-08-15T17:23:40"}},"wordcloud":{"enable":true},"highlight":{"enable":false},"prismjs":{"enable":true,"preprocess":true,"line_number":false,"tab_replace":""},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}}}}},"excerpt":"","more":"<h1 id=\"一个奇怪的一级标题\"><a href=\"#一个奇怪的一级标题\" class=\"headerlink\" title=\"一个奇怪的一级标题\"></a>一个奇怪的一级标题</h1><h2 id=\"一个奇怪的二级标题\"><a href=\"#一个奇怪的二级标题\" class=\"headerlink\" title=\"一个奇怪的二级标题\"></a>一个奇怪的二级标题</h2><h3 id=\"一个奇怪的三级标题\"><a href=\"#一个奇怪的三级标题\" class=\"headerlink\" title=\"一个奇怪的三级标题\"></a>一个奇怪的三级标题</h3><p>好了不开玩笑了<br>这是本人的第一个博客（有点小激动）<br>欢迎前来捧场（啪叽啪叽）  </p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2021-08-15T12:35:27.832Z","updated":"2021-08-15T12:35:27.832Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckshh03wm000krns6ec7p9ma3","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo new <span class=\"token string\">\"My New Post\"</span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo server</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo generate</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo deploy</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{"yun":{"avatar":{"url":"/images/avatar.png","rounded":true,"opacity":1},"banner":{"enable":true,"title":"臭臭の小站","src":"/js/ui/banner.js","border":true,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"}},"social":[{"name":"GitHub","link":"https://github.com/ssmzhn","icon":"icon-github-line","color":"#6e5494"},{"name":"网易云音乐","link":"http://music.163.com/m/user/home?id=1790526375","icon":"icon-netease-cloud-music-line","color":"#C20C0C"},{"name":"知乎","link":"https://www.zhihu.com/people/she-sha-ming-zi-hao-ni/","icon":"icon-zhihu-line","color":"#0084FF"},{"name":"哔哩哔哩","link":"https://b23.tv/n2PyuM","icon":"icon-bilibili-line","color":"#FF8EB3"},{"name":"Twitter","link":"https://twitter.com/ssmzhn12138","icon":"icon-twitter-line","color":"#1da1f2"},{"name":"Telegram","link":"https://t.me/NameSetter","icon":"icon-telegram-line","color":"#0088CC"},{"name":"E-Mail","link":"mailto:ssmzhn@163.com","icon":"icon-mail-line","color":"#8E71C1"}],"reward":{"enable":false},"pages":[{"name":"小伙伴们","url":"/links","icon":"icon-genderless-line","color":"dodgerblue"}],"notice":{"enable":true,"content":"来了就看看再走吧！"},"comment":{"enable":true,"tips":["若您想及时得到回复提醒，建议跳转 GitHub Issues 评论。","若没有本文 Issue，您可以使用 Comment 模版新建。"],"candidates":["utterances"]},"utterances":{"enable":true,"repo":"ssmzhn/ssmzhn.github.io","issue-term":"pathname","theme":"github-light"},"footer":{"since":2021,"live_time":{"enable":true,"prefix":"这个博客爬了","suffix":"😅","start_time":"2021-08-15T17:23:40"}},"wordcloud":{"enable":true},"highlight":{"enable":false},"prismjs":{"enable":true,"preprocess":true,"line_number":false,"tab_replace":""},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}}}}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo new <span class=\"token string\">\"My New Post\"</span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo server</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo generate</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo deploy</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckshh03rs0001rns66a3s7896","category_id":"ckshh03tu0004rns660ul6rpu","_id":"ckshh03vu000brns65xup8261"}],"PostTag":[{"post_id":"ckshh03rs0001rns66a3s7896","tag_id":"ckshh03ua0005rns6eb4tb6cw","_id":"ckshh03w5000erns61ik12wp4"},{"post_id":"ckshh03rs0001rns66a3s7896","tag_id":"ckshh03vg0009rns602t26b7q","_id":"ckshh03w7000frns67lpw1uzt"},{"post_id":"ckshh03rs0001rns66a3s7896","tag_id":"ckshh03vw000crns6ev0k2x58","_id":"ckshh03wc000hrns6a5dc46sg"},{"post_id":"ckshh03t80003rns6cqwi8w1q","tag_id":"ckshh03w0000drns69xl6cc0z","_id":"ckshh03wg000irns69uyp44zh"},{"post_id":"ckshh03t80003rns6cqwi8w1q","tag_id":"ckshh03w8000grns6ecp79wk9","_id":"ckshh03wh000jrns67oybdyzq"}],"Tag":[{"name":"Python","_id":"ckshh03ua0005rns6eb4tb6cw"},{"name":"学习","_id":"ckshh03vg0009rns602t26b7q"},{"name":"随笔","_id":"ckshh03vw000crns6ev0k2x58"},{"name":"test","_id":"ckshh03w0000drns69xl6cc0z"},{"name":"测试","_id":"ckshh03w8000grns6ecp79wk9"}]}}